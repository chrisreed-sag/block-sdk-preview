<?xml version="1.0" encoding="UTF-8" standalone="no"?><Packages><Package depth="../../" display="apama.analyticskit" name="apama.analyticskit"><Type category="Event" name="ConfigurationProperty"><Description><![CDATA[Values from configurable properties which is passed to blocks as one of the action parameters.]]></Description><Summary><![CDATA[Values from configurable properties which is passed to blocks as one of the action parameters.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="timeDelay" type="float"><Description><![CDATA[The maximum delay in seconds before Input blocks consider an event to be old.]]></Description><Summary><![CDATA[The maximum delay in seconds before Input blocks consider an event to be old.]]></Summary><TypeParameters/></Member><Member name="minWaitTime" type="float"><Description><![CDATA[Some blocks can generate output automatically, based on the rate of change of the output. This sets a lower limit on the time between outputs, in seconds.]]></Description><Summary><![CDATA[Some blocks can generate output automatically, based on the rate of change of the output. This sets a lower limit on the time between outputs, in seconds.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="Configuration"><Description><![CDATA[Holder for tunable configuration options.

 Constants and actions on this event can be modified to tune the behaviour of the Analytics Builder runtime.]]></Description><Summary><![CDATA[Holder for tunable configuration options.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="TIMEDELAY_SECS" type="float" typeValue="1.0"><Description><![CDATA[The maximum delay in seconds before Input blocks consider an event to be old.

 Input blocks re-order input events, which is achieved by not processing them until TIMEDELAY_SECS after the timestamp in the object, thus delaying processing by this amount. If the event is delayed in its delivery to the correlator, such that the delay is greater than or equal to this value, then the input is considered old and will be dropped and not processed.]]></Description><Summary><![CDATA[The maximum delay in seconds before Input blocks consider an event to be old.]]></Summary><TypeParameters/></Member><Member constant="true" name="DEFAULT_TIMEOUT_SECS" type="float" typeValue="10.0"><Description><![CDATA[Default timeout for simple request-responses.

 Timeout in seconds applied to request-responses, for example in requests to Cumulocity.]]></Description><Summary><![CDATA[Default timeout for simple request-responses.]]></Summary><TypeParameters/></Member><Member constant="true" name="LOGGING_THROTTLE_SECS" type="float" typeValue="1.0"><Description><![CDATA[Logging throttling in seconds.

 Interval used for periodic logging, such as reporting changes in the number of dropped events by Input blocks (for events delayed by more than TIMEDELAY_SECS).  Log statements will not appear more frequently than this period.]]></Description><Summary><![CDATA[Logging throttling in seconds.]]></Summary><TypeParameters/></Member><Member constant="true" name="MINIMUM_WAIT_TIME_SECS" type="float" typeValue="0.1"><Description><![CDATA[Minimum wait time in seconds.

 Some blocks can generate output automatically, based on the rate of change of the output. This sets a lower limit on the time between outputs, in seconds.]]></Description><Summary><![CDATA[Minimum wait time in seconds.]]></Summary><TypeParameters/></Member><Action name="onModelEnd" staticNature="static "><Description><![CDATA[Report the end of a model.

 Whenever a model is deleted this action is called to report the deletion.

 At a minimum, this would log to the log file.]]></Description><Summary><![CDATA[Report the end of a model.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="name" type="string"><Description><![CDATA[The model name.]]></Description></Parameter><Parameter name="id" type="string"><Description><![CDATA[The model identifier.]]></Description></Parameter><Parameter name="model" type="any"><Description><![CDATA[The whole model.]]></Description></Parameter><Parameter name="modelProperties" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="any"/></Parameters><Description><![CDATA[A copy of the model's properties.]]></Description></Parameter></Parameters></Action><Action name="onModelFailure" staticNature="static "><Description><![CDATA[Report model failure.

 Whenever any type of error (deployment time or during runtime) occurs in the model this action is called to report the error.

 At a minimum, this would log to the log file.]]></Description><Summary><![CDATA[Report model failure.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="name" type="string"><Description><![CDATA[The model name]]></Description></Parameter><Parameter name="id" type="string"><Description><![CDATA[The model identifier]]></Description></Parameter><Parameter name="reason" type="string"><Description><![CDATA[Description of why the model failed]]></Description></Parameter><Parameter name="modelProperties" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="any"/></Parameters><Description><![CDATA[A copy of the model's properties.]]></Description></Parameter><Parameter name="exception" type="com.apama.exceptions.Exception"><Description><![CDATA[If available, the exception. An empty stack trace indicates no exception is available.]]></Description></Parameter></Parameters></Action><Action name="onModelStart" staticNature="static "><Description><![CDATA[Report the start of a model.

 Whenever a model is created this action is called to report the creation.

 At a minimum, this would log to the log file.]]></Description><Summary><![CDATA[Report the start of a model.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="name" type="string"><Description><![CDATA[The model name.]]></Description></Parameter><Parameter name="id" type="string"><Description><![CDATA[The model identifier.]]></Description></Parameter><Parameter name="model" type="any"><Description><![CDATA[The whole model.]]></Description></Parameter><Parameter name="modelProperties" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="any"/></Parameters><Description><![CDATA[A copy of the model's properties.]]></Description></Parameter></Parameters></Action></Type><Type category="Event" name="PromiseHandler" private="true"><Description><![CDATA[Promise done adapter

 Adapts Promise.handlers to separate onValue, onException callbacks.]]></Description><Summary><![CDATA[Promise done adapter]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="onValue" type="action"><Parameters><Parameter type="any"/></Parameters><Description><![CDATA[(optional) callback for fulfilling promise.]]></Description><Summary><![CDATA[(optional) callback for fulfilling promise.]]></Summary><TypeParameters/></Member><Member name="onException" type="action"><Parameters><Parameter type="com.apama.exceptions.Exception"/></Parameters><Description><![CDATA[(optional) callback for rejecting promise.]]></Description><Summary><![CDATA[(optional) callback for rejecting promise.]]></Summary><TypeParameters/></Member><Action name="handle" staticNature=""><Description><![CDATA[Call onValue or onException.]]></Description><Summary><![CDATA[Call onValue or onException.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="value" type="any"/><Parameter name="ex" type="optional"><Parameters><Parameter type="com.apama.exceptions.Exception"/></Parameters></Parameter></Parameters></Action></Type><Type category="Event" name="Activation"><Description><![CDATA[Holds currect activation values on all outputs.]]></Description><Summary><![CDATA[Holds currect activation values on all outputs.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="timestamp" type="float"><Description><![CDATA[The time of the evaluation]]></Description><Summary><![CDATA[The time of the evaluation]]></Summary><TypeParameters/></Member><Member name="values" private="true" type="sequence"><Parameters><Parameter type="any"/></Parameters><Description><![CDATA[The values on all outputs. The output ID is the index within the sequence.]]></Description><Summary><![CDATA[The values on all outputs. The output ID is the index within the sequence.]]></Summary><TypeParameters/></Member><Member name="partition" type="any"><Description><![CDATA[Partition value *]]></Description><Summary><![CDATA[Partition value *]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="DroppedEvent"><Description><![CDATA[An event that was excessively delayed and was thus dropped]]></Description><Summary><![CDATA[An event that was excessively delayed and was thus dropped]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="evt" type="any"><TypeParameters/></Member><Member constant="true" name="CHANNEL" type="string" typeValue="&quot;AnalyticsDroppedEvents&quot;"><Description><![CDATA[Name of the channel where dropped events are sent.

 All events that are dropped by the input blocks are send to this channel.]]></Description><Summary><![CDATA[Name of the channel where dropped events are sent.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="Wire"><Description><![CDATA[The event to represent a wire between two blocks.]]></Description><Summary><![CDATA[The event to represent a wire between two blocks.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="sourceBlockId" type="string"><Description><![CDATA[The ID of the source block.]]></Description><Summary><![CDATA[The ID of the source block.]]></Summary><TypeParameters/></Member><Member name="sourceOutputName" type="string"><Description><![CDATA[The name of the output of the source block.]]></Description><Summary><![CDATA[The name of the output of the source block.]]></Summary><TypeParameters/></Member><Member name="targetBlockId" type="string"><Description><![CDATA[The ID of the target block.]]></Description><Summary><![CDATA[The ID of the target block.]]></Summary><TypeParameters/></Member><Member name="targetInputName" type="string"><Description><![CDATA[The name of the input of the target block.]]></Description><Summary><![CDATA[The name of the input of the target block.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="Partition_Broadcast"><Description><![CDATA[Special partition for blocks/ data that applies to all partitions.]]></Description><Summary><![CDATA[Special partition for blocks/ data that applies to all partitions.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="partition" type="any"><Description><![CDATA[identifier of potentially multiple distinct broadcast values.]]></Description><Summary><![CDATA[identifier of potentially multiple distinct broadcast values.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="CreateModel"><Description><![CDATA[Request event for creating a model.]]></Description><Summary><![CDATA[Request event for creating a model.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="state" package="apama.analyticskit" type="ModelState"><Description><![CDATA[Information about the model to create.]]></Description><Summary><![CDATA[Information about the model to create.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="Partition_Grouped"><Description><![CDATA[Special partition for specifying worker while keeping state partitioned.]]></Description><Summary><![CDATA[Special partition for specifying worker while keeping state partitioned.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="worker" type="any"><Description><![CDATA[which worker to associate with.

 This can be any type - the value is hashed to determine which worker.]]></Description><Summary><![CDATA[which worker to associate with.]]></Summary><TypeParameters/></Member><Member name="partition" type="any"><Description><![CDATA[identifier of potentially multiple distinct partition values.]]></Description><Summary><![CDATA[identifier of potentially multiple distinct partition values.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="Partition_Default"><Description><![CDATA[Special partition for blocks that do not specify a partition.]]></Description><Summary><![CDATA[Special partition for blocks that do not specify a partition.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Type><Type category="Event" name="RequestForwarding"><Description><![CDATA[Request forwarding of an event type to workers]]></Description><Summary><![CDATA[Request forwarding of an event type to workers]]></Summary><TypeParameters/><Routes><Reference package="apama.analyticskit" type="RequestForwarding"/></Routes><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="eventTypeFQ" type="string"><Description><![CDATA[fully qualified name of an event type]]></Description><Summary><![CDATA[fully qualified name of an event type]]></Summary><TypeParameters/></Member><Member name="keyField" type="optional"><Parameters><Parameter type="string"/></Parameters><Description><![CDATA[Key field.]]></Description><Summary><![CDATA[Key field.]]></Summary><TypeParameters/></Member><Action name="byKey" staticNature="static "><Description><![CDATA[Request forwarding of an event type partitioned by the specified key field to workers.

 Must be called in the main context (i.e. from a $validate call)]]></Description><Summary><![CDATA[Request forwarding of an event type partitioned by the specified key field to workers.]]></Summary><TypeParameters/><Routes><Reference package="apama.analyticskit" type="RequestForwarding"/></Routes><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="evt" type="any"/><Parameter name="field" type="string"><Description><![CDATA[the name of the field to partition by]]></Description></Parameter></Parameters></Action><Action name="unpartitioned" staticNature="static "><Description><![CDATA[Request forwarding of an event type to workers.

 Must be called in the main context (i.e. from a $validate call)]]></Description><Summary><![CDATA[Request forwarding of an event type to workers.]]></Summary><TypeParameters/><Routes><Reference package="apama.analyticskit" type="RequestForwarding"/></Routes><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="evt" type="any"/></Parameters></Action></Type><Type category="Event" name="Partition_Wildcard"><Description><![CDATA[Special partition for blocks that apply to any partition.]]></Description><Summary><![CDATA[Special partition for blocks that apply to any partition.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Type><Type category="Event" name="Partitioner"><Description><![CDATA[Hashes partitions to workers.]]></Description><Summary><![CDATA[Hashes partitions to workers.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends><Reference type="any"/></Sends><Listens><Reference type="any"/></Listens><Spawns/><Member name="numWorkers" type="optional"><Parameters><Parameter type="integer"/></Parameters><TypeParameters/></Member><Member constant="true" name="WORKER_PREFIX" type="string" typeValue="&quot;analyticsKit.worker_&quot;"><TypeParameters/></Member><Member constant="true" name="ALL_WORKERS" type="string" typeValue="&quot;analyticsKit.allWorkers&quot;"><TypeParameters/></Member><Action name="deAlias" staticNature="static "><Description><![CDATA[Strip out Partition_Alias to return the 'real' device.

 If not a Partition_Alias, return the partition value as is.]]></Description><Summary><![CDATA[Strip out Partition_Alias to return the 'real' device.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="p" type="any"/></Parameters></Action><Action name="getWorkerChannelFor" staticNature=""><Description><![CDATA[Get a channel to send events to for a partition]]></Description><Summary><![CDATA[Get a channel to send events to for a partition]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="partition" type="any"/></Parameters></Action><Action name="genericForwarder" staticNature=""><Description><![CDATA[A generic forwarder.

 Forwards all events of type eventTypeFQ to the appropriate worker.]]></Description><Summary><![CDATA[A generic forwarder.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends><Reference type="any"/></Sends><Listens><Reference type="any"/></Listens><Spawns/><Parameters><Parameter name="eventTypeFQ" type="string"><Description><![CDATA[Fully qualified event type name.]]></Description></Parameter><Parameter name="idField" type="optional"><Parameters><Parameter type="string"/></Parameters><Description><![CDATA[field name used as key.]]></Description></Parameter></Parameters></Action><Action name="getNumWorkers" staticNature=""><Description><![CDATA[Get the number of workers.]]></Description><Summary><![CDATA[Get the number of workers.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="integer"/></Action><Action name="getWorkerFor" staticNature=""><Description><![CDATA[Get which worker id should handle a partition]]></Description><Summary><![CDATA[Get which worker id should handle a partition]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="integer"/><Parameters><Parameter name="partition" type="any"/></Parameters></Action><Action name="get" staticNature="static "><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit" type="Partitioner"/></Action><Action name="deAlias_actualDevice" staticNature="static "><Description><![CDATA[Strip out Partition_Alias to return the 'actual' device.

 If not a Partition_Alias, return the partition value as is.]]></Description><Summary><![CDATA[Strip out Partition_Alias to return the 'actual' device.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="p" type="any"/></Parameters></Action></Type><Type category="Event" name="L10N"><Description><![CDATA[API for localization of error message.

 Blocks should throw getLocalizedException("msgId", [params]) (or the _basic equivalent), where params can be result of getLocalized(..) (or _basic variant). (the use of 'throw' in the block informs the compiler that that basic block is terminated).]]></Description><Summary><![CDATA[API for localization of error message.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Action name="getLocalizedSubMsg" staticNature="static "><Description><![CDATA[Get a localized sub-message.

 Get a sub-message that can be passed as a member of params to getLocalizedException or getLocalizedSubMsg recursively.]]></Description><Summary><![CDATA[Get a localized sub-message.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"><Description><![CDATA[a value that can be passed to getLocalizedException in params.]]></Description></Returns><Parameters><Parameter name="msgId" type="string"><Description><![CDATA[-  a Message ID]]></Description></Parameter><Parameter name="params" type="sequence"><Parameters><Parameter type="any"/></Parameters><Description><![CDATA[- a list of parameters - could be simple values (string/ float/ etc) or result from getLocalizedSubMsg.]]></Description></Parameter></Parameters></Action><Action name="getLocalizedException" staticNature="static "><Description><![CDATA[Get a localized exception with parameters.]]></Description><Summary><![CDATA[Get a localized exception with parameters.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="com.apama.exceptions.Exception"/><Parameters><Parameter name="msgId" type="string"><Description><![CDATA[- a Message ID]]></Description></Parameter><Parameter name="params" type="sequence"><Parameters><Parameter type="any"/></Parameters><Description><![CDATA[- a list of parameters - could be simple values (string/ float/ etc) or result from getLocalizedSubMsg]]></Description></Parameter></Parameters></Action><Action name="getLocalizedSubMsg_basic" staticNature="static "><Description><![CDATA[Get a localized sub-message.

 Get a sub-message that can be passed as a member of params to getLocalizedException or getLocalizedSubMsg recursively.]]></Description><Summary><![CDATA[Get a localized sub-message.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"><Description><![CDATA[a value that can be passed to getLocalizedException in params.]]></Description></Returns><Parameters><Parameter name="msgId" type="string"><Description><![CDATA[-  a Message ID]]></Description></Parameter></Parameters></Action><Action name="getLocalizedException_basic" staticNature="static "><Description><![CDATA[Get a localized exception with no parameters.]]></Description><Summary><![CDATA[Get a localized exception with no parameters.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="com.apama.exceptions.Exception"/><Parameters><Parameter name="msgId" type="string"><Description><![CDATA[- a Message ID]]></Description></Parameter></Parameters></Action></Type><Type category="Event" name="PromiseHelper" private="true"><Description><![CDATA[Adapter to ensure promises are only completed once.

 Internal adapter; the fulfill and reject are the actions exposed to the function passed in Promise.create. TODO: is this redundant (Promise has 'settled' which should be the same as done)]]></Description><Summary><![CDATA[Adapter to ensure promises are only completed once.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="onFulfilled" type="action"><Parameters><Parameter type="any"/></Parameters><Description><![CDATA[Callback into the promise.

 This event guarantees only onFulfilled or onRejected are called, and only once.]]></Description><Summary><![CDATA[Callback into the promise.]]></Summary><TypeParameters/></Member><Member name="onRejected" type="action"><Parameters><Parameter type="com.apama.exceptions.Exception"/></Parameters><Description><![CDATA[Callback into the promise.

 This event guarantees only onFulfilled or onRejected are called, and only once.]]></Description><Summary><![CDATA[Callback into the promise.]]></Summary><TypeParameters/></Member><Member name="done" type="boolean"><Description><![CDATA[Whether the promise is completed.]]></Description><Summary><![CDATA[Whether the promise is completed.]]></Summary><TypeParameters/></Member><Action name="fulfill" staticNature=""><Description><![CDATA[Fulfill the promise.

 No effect if already done.]]></Description><Summary><![CDATA[Fulfill the promise.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="value" type="any"/></Parameters></Action><Action name="reject" staticNature=""><Description><![CDATA[Reject the promise.

 No effect if already done.]]></Description><Summary><![CDATA[Reject the promise.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="ex" type="com.apama.exceptions.Exception"/></Parameters></Action><Action name="doResolve" staticNature="static "><Description><![CDATA[Helper for resolve method.

 Implements at-most-once part of resolve - calls fn, and only the first call into fn's arguments will call to onFulfilled or onRejected. If fn throws, calls onRejected.]]></Description><Summary><![CDATA[Helper for resolve method.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="fn" type="action"><Parameters><Parameter type="action"><Parameters><Parameter type="any"/></Parameters></Parameter><Parameter type="action"><Parameters><Parameter type="com.apama.exceptions.Exception"/></Parameters></Parameter></Parameters></Parameter><Parameter name="onFulfilled" type="action"><Parameters><Parameter type="any"/></Parameters></Parameter><Parameter name="onRejected" type="action"><Parameters><Parameter type="com.apama.exceptions.Exception"/></Parameters></Parameter></Parameters></Action></Type><Type category="Event" name="PromiseThen" private="true"><Description><![CDATA[Promise then adapter

 Adapts Promise.handlers (via PromiseHandler :TODO - make direct for efficiency) to a bound 'then' or 'catch', and then resolve or reject the next promise in the chain]]></Description><Summary><![CDATA[Promise then adapter]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="resolve" type="action"><Parameters><Parameter type="any"/></Parameters><Description><![CDATA[Next promise.resolve]]></Description><Summary><![CDATA[Next promise.resolve]]></Summary><TypeParameters/></Member><Member name="reject" type="action"><Parameters><Parameter type="com.apama.exceptions.Exception"/></Parameters><Description><![CDATA[Next promise.reject]]></Description><Summary><![CDATA[Next promise.reject]]></Summary><TypeParameters/></Member><Member name="boundThen" type="action"><Parameters><Parameter type="any"/></Parameters><Returns type="any"/><Description><![CDATA[andThen callback.

 Optional - callback for this 'then' entry in the promise chain, if set.]]></Description><Summary><![CDATA[andThen callback.]]></Summary><TypeParameters/></Member><Member name="boundCatch" type="action"><Parameters><Parameter type="com.apama.exceptions.Exception"/></Parameters><Returns type="any"/><Description><![CDATA[andCatch callback.

 Optional - callback for this 'catch' entry in the promose chain, if set.]]></Description><Summary><![CDATA[andCatch callback.]]></Summary><TypeParameters/></Member><Action name="doThen" staticNature=""><Description><![CDATA[Previous promise is fulfilled.

 Calls our 'boundThen' if set, and then resolves the next promise. Rejects next promise on an exception.]]></Description><Summary><![CDATA[Previous promise is fulfilled.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="result" type="any"/></Parameters></Action><Action name="doCatch" staticNature=""><Description><![CDATA[Previous promise is rejected.

 Calls our 'boundCatch' if set, and the resolves the next promise. Rejects next promise if boundCatch throws or if boundCatch is empty.]]></Description><Summary><![CDATA[Previous promise is rejected.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="ex" type="com.apama.exceptions.Exception"/></Parameters></Action></Type><Type category="Event" name="ConfigHelper"><Description><![CDATA[Access configuration properties.

 This type provides methods for getting configuration properties. Note that these calls are not especially cheap; if a value is required while processing events, it is best to query it at startup and re-use the value.]]></Description><Summary><![CDATA[Access configuration properties.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Action name="logMessage" private="true" staticNature="static "><Description/><Summary/><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="propertyName" type="string"/><Parameter name="value" type="string"/><Parameter name="source" type="string"/></Parameters></Action><Action name="getInteger" staticNature="static "><Description><![CDATA[Gets the configurable property of type integer.]]></Description><Summary><![CDATA[Gets the configurable property of type integer.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="integer"/><Parameters><Parameter name="eventType" type="string"><Description><![CDATA[The name of a event type that has a constant value to use as fallback if not available as a configuration property, or empty string to require the configuration property to be set.]]></Description></Parameter><Parameter name="propertyName" type="string"><Description><![CDATA[The name of the requested property.]]></Description></Parameter></Parameters></Action><Action name="isValidPropertyName" private="true" staticNature="static "><Description/><Summary/><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"/><Parameters><Parameter name="propertyName" type="string"><Description><![CDATA[The property name to validate.]]></Description></Parameter></Parameters></Action><Action name="getFloat" staticNature="static "><Description><![CDATA[Gets the configurable property of type float.]]></Description><Summary><![CDATA[Gets the configurable property of type float.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="float"/><Parameters><Parameter name="eventType" type="string"><Description><![CDATA[The name of a event type that has a constant value to use as fallback if not available as a configuration property, or empty string to require the configuration property to be set.]]></Description></Parameter><Parameter name="propertyName" type="string"><Description><![CDATA[The name of the requested property.]]></Description></Parameter></Parameters></Action><Action name="getString" staticNature="static "><Description><![CDATA[Gets the configurable property of type string.]]></Description><Summary><![CDATA[Gets the configurable property of type string.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="eventType" type="string"><Description><![CDATA[The name of a event type that has a constant value to use as fallback if not available as a configuration property, or empty string to require the configuration property to be set.]]></Description></Parameter><Parameter name="propertyName" type="string"><Description><![CDATA[The name of the requested property.]]></Description></Parameter></Parameters></Action><Action name="getAny" private="true" staticNature="static "><Description/><Summary/><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Throws><Description><![CDATA[Exception if propertyName is not valid or if property is not configured.]]></Description></Throws><Returns type="any"/><Parameters><Parameter name="eventType" type="string"><Description><![CDATA[The name of a event type that has a constant value to use as fallback if not available as a configuration property, or empty string to require the configuration property to be set.]]></Description></Parameter><Parameter name="propertyName" type="string"><Description><![CDATA[The name of the requested property.]]></Description></Parameter></Parameters></Action><Action name="mapPropertyToConstant" staticNature="static "><Description><![CDATA[Maps name of the property to the constant name.]]></Description><Summary><![CDATA[Maps name of the property to the constant name.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="propertyName" type="string"/></Parameters></Action></Type><Type category="Event" name="ABConstants"><Description><![CDATA[The framework constants that can be used by blocks.]]></Description><Summary><![CDATA[The framework constants that can be used by blocks.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="MODEL_NAME_IDENTIFIER" type="string" typeValue="&quot;apama_analytics_modelName&quot;"><Description><![CDATA[The identifier for model name in the modelScopeParameters.]]></Description><Summary><![CDATA[The identifier for model name in the modelScopeParameters.]]></Summary><TypeParameters/></Member><Member constant="true" name="MODE_IDENTIFIER" type="string" typeValue="&quot;apama_analytics_mode&quot;"><Description><![CDATA[The identifier for mode in the modelScopeParameters.]]></Description><Summary><![CDATA[The identifier for mode in the modelScopeParameters.]]></Summary><TypeParameters/></Member><Member constant="true" name="MODE_PROPERTIES_IDENTIFIER" type="string" typeValue="&quot;apama_analytics_modeProperties&quot;"><Description><![CDATA[The identifier for mode properties in the modelScopeParameters.]]></Description><Summary><![CDATA[The identifier for mode properties in the modelScopeParameters.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="ModelState"><Description><![CDATA[Contains all the information about a model.]]></Description><Summary><![CDATA[Contains all the information about a model.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="modelId" type="string"><Description><![CDATA[The ID of the model.]]></Description><Summary><![CDATA[The ID of the model.]]></Summary><TypeParameters/></Member><Member name="blocks" type="dictionary"><Parameters><Parameter type="string"/><Parameter package="apama.analyticskit" type="BlockConfiguration"/></Parameters><Description><![CDATA[Dictionary of all the block instances in the model. The keys in the dictionary are block IDs.]]></Description><Summary><![CDATA[Dictionary of all the block instances in the model. The keys in the dictionary are block IDs.]]></Summary><TypeParameters/></Member><Member name="wires" type="sequence"><Parameters><Parameter package="apama.analyticskit" type="Wire"/></Parameters><Description><![CDATA[All of the wires.]]></Description><Summary><![CDATA[All of the wires.]]></Summary><TypeParameters/></Member><Member name="modelScopeParameters" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="any"/></Parameters><Description><![CDATA[Model scoped parameters.]]></Description><Summary><![CDATA[Model scoped parameters.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="BlockConfiguration"><Description><![CDATA[Specifies configuration options for a block instance.]]></Description><Summary><![CDATA[Specifies configuration options for a block instance.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="type" type="string"><Description><![CDATA[The fully qualified name of the block type.]]></Description><Summary><![CDATA[The fully qualified name of the block type.]]></Summary><TypeParameters/></Member><Member name="parameters" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="any"/></Parameters><Description><![CDATA[The values for the block parameters. The keys are parameter names and the values are parameter values. It is an error to specify a value for non-existing parameters. It is an error to not specify a value for a required parameter. It is also an error to specify a parameter value of an incorrect type.]]></Description><Summary><![CDATA[The values for the block parameters. The keys are parameter names and the values are parameter values. It is an error to specify a value for non-existing parameters. It is an error to not specify a value for a required parameter. It is also an error to specify a parameter value of an incorrect type.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="NameValue"><Description><![CDATA[The event for a dynamic property.]]></Description><Summary><![CDATA[The event for a dynamic property.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="name" type="string"><Description><![CDATA[The name of the property.]]></Description><Summary><![CDATA[The name of the property.]]></Summary><TypeParameters/></Member><Member name="value" type="any"><Description><![CDATA[The value of the property.]]></Description><Summary><![CDATA[The value of the property.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="Partition_Alias"><Description><![CDATA[Can be passed to BlockBase.sendsOutput or BlockBase.listensForInput to denote sending to a virtual device.]]></Description><Summary><![CDATA[Can be passed to BlockBase.sendsOutput or BlockBase.listensForInput to denote sending to a virtual device.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="realDevice" type="any"><Description><![CDATA[Partition value of the 'real' device.]]></Description><Summary><![CDATA[Partition value of the 'real' device.]]></Summary><TypeParameters/></Member><Member name="virtualDevice" type="any"><Description><![CDATA[Partition value of the 'virtual' device, or the 'actual' (this is the partition value that input data will have). This is only used for determining if a block has a duplicate output.]]></Description><Summary><![CDATA[Partition value of the 'virtual' device, or the 'actual' (this is the partition value that input data will have). This is only used for determining if a block has a duplicate output.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="Promise"><Description><![CDATA[An asynchronous promise result.

 A promise represents something that may be fulfilled later. Promises can be chained, to make linear-style async chains of calls. The 'then' methods take an action which returns an any - if that any is a Promise, then it is waited on until any 'then' actions are called.

 Promises are created with the static 'create' action, which takes an 'fn' action to call. This function is passed the fulfill and reject actions. (this pattern ensures that exceptions thrown by the 'fn' action are caught and reject the promise).]]></Description><Summary><![CDATA[An asynchronous promise result.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="returnValue" private="true" type="any"><Description><![CDATA[The return value, if there is one.]]></Description><Summary><![CDATA[The return value, if there is one.]]></Summary><TypeParameters/></Member><Member name="settled" private="true" type="boolean"><Description><![CDATA[Promise is fulfilled or has been rejected.]]></Description><Summary><![CDATA[Promise is fulfilled or has been rejected.]]></Summary><TypeParameters/></Member><Member name="exception" private="true" type="optional"><Parameters><Parameter type="com.apama.exceptions.Exception"/></Parameters><Description><![CDATA[The exception if failed.]]></Description><Summary><![CDATA[The exception if failed.]]></Summary><TypeParameters/></Member><Member name="handlers" private="true" type="sequence"><Parameters><Parameter type="action"><Parameters><Parameter type="any"/><Parameter type="optional"><Parameters><Parameter type="com.apama.exceptions.Exception"/></Parameters></Parameter></Parameters></Parameter></Parameters><Description><![CDATA[The callbakcs registered against this promise.]]></Description><Summary><![CDATA[The callbakcs registered against this promise.]]></Summary><TypeParameters/></Member><Action name="thenOrCatch" staticNature=""><Description><![CDATA[Execute a function after this promise is completed.

 Executes onThen or onCatch once this promise is fulfilled or rejected Returns a Promise of the result of onThen or onCatch (or a rejected promise if an uncaught exception occurs).]]></Description><Summary><![CDATA[Execute a function after this promise is completed.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit" type="Promise"><Description><![CDATA[a Promise of the result of the cb method (or rejected on exception)]]></Description></Returns><Parameters><Parameter name="onThen" type="action"><Parameters><Parameter type="any"/></Parameters><Returns type="any"/><Description><![CDATA[optional action to call when this promise is fulfilled with a concrete value.]]></Description></Parameter><Parameter name="onCatch" type="action"><Parameters><Parameter type="com.apama.exceptions.Exception"/></Parameters><Returns type="any"/><Description><![CDATA[optional action to call when this promise is rejected.]]></Description></Parameter></Parameters></Action><Action name="resolve" staticNature="static "><Description><![CDATA[Convert a promise or non-promise into a promise.

 Can be used to convert sync 'bare' values into async promises.]]></Description><Summary><![CDATA[Convert a promise or non-promise into a promise.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit" type="Promise"/><Parameters><Parameter name="value" type="any"/></Parameters></Action><Action name="_fulfill" private="true" staticNature=""><Description><![CDATA[Fulfills this promise.

 If value is another Promise, we chain ourselves to that promise - i.e. we are done when it is.

 This must not be called directly by users (we don't trust them to call it only once). The user's func action passed to 'create' is passed a closures over PromiseHelper to ensure this is called once.]]></Description><Summary><![CDATA[Fulfills this promise.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="value" type="any"/></Parameters></Action><Action name="reject" staticNature="static "><Description><![CDATA[Convert an exception into a rejected promise.]]></Description><Summary><![CDATA[Convert an exception into a rejected promise.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit" type="Promise"/><Parameters><Parameter name="e" type="com.apama.exceptions.Exception"/></Parameters></Action><Action name="andCatch" staticNature=""><Description><![CDATA[Catch an async exception.

 Executes cb if this promise is rejected.]]></Description><Summary><![CDATA[Catch an async exception.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"><Description><![CDATA[a Promise of the result of the cb method (or this promise's value if it is not rejected)]]></Description></Returns><Parameters><Parameter name="cb" type="action"><Parameters><Parameter type="com.apama.exceptions.Exception"/></Parameters><Returns type="any"/></Parameter></Parameters></Action><Action name="_reject" private="true" staticNature=""><Description><![CDATA[Reject this promise.

 This must not be called directly by users (we don't trust them to call it only once). The user's func action passed to 'create' is passed a closures over PromiseHelper to ensure this is called once.]]></Description><Summary><![CDATA[Reject this promise.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="e" type="com.apama.exceptions.Exception"/></Parameters></Action><Action name="_fulfill_return" staticNature=""><Description><![CDATA[Fulfill the promise.

 Convenience variant that returns new any.]]></Description><Summary><![CDATA[Fulfill the promise.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="value" type="any"/></Parameters></Action><Action name="_reject_return" staticNature=""><Description><![CDATA[Reject the promise.

 Convenience variant that returns new any.]]></Description><Summary><![CDATA[Reject the promise.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="value" type="com.apama.exceptions.Exception"/></Parameters></Action><Action name="create" staticNature="static "><Description><![CDATA[Create a promise.

 The func is called immediately, but it may call the any or Exception functions at any point in the future. Only the first call is used.  Calling the first function with a promise will wait for that to be fulfilled before fulfilling this promise.]]></Description><Summary><![CDATA[Create a promise.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit" type="Promise"/><Parameters><Parameter name="func" type="action"><Parameters><Parameter type="action"><Parameters><Parameter type="any"/></Parameters></Parameter><Parameter type="action"><Parameters><Parameter type="com.apama.exceptions.Exception"/></Parameters></Parameter></Parameters></Parameter></Parameters></Action><Action name="done" staticNature=""><Description><![CDATA[Register callback.

 Callback that is always executed after the caller has completed once the promise is settled.

 One of onFulfilled, onRejected will be called.]]></Description><Summary><![CDATA[Register callback.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="onFulfilled" type="action"><Parameters><Parameter type="any"/></Parameters></Parameter><Parameter name="onRejected" type="action"><Parameters><Parameter type="com.apama.exceptions.Exception"/></Parameters></Parameter></Parameters></Action><Action name="_nowSettled" private="true" staticNature=""><Description><![CDATA[This promise is now settled.

 Called from reject/ fulfill (once it has a non-Promise value).]]></Description><Summary><![CDATA[This promise is now settled.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="andThen" staticNature=""><Description><![CDATA[Execute a function after this promise is completed.

 Executes cb once this promise is fulfilled with a real (non-promise) value.  Returns a Promise of the result of cb (or the result of the result of cb if it is a Promise)]]></Description><Summary><![CDATA[Execute a function after this promise is completed.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"><Description><![CDATA[a Promise of the result of the cb method (or rejected on exception)]]></Description></Returns><Parameters><Parameter name="cb" type="action"><Parameters><Parameter type="any"/></Parameters><Returns type="any"/></Parameter></Parameters></Action></Type><Type category="Event" name="TimerParams"><Description><![CDATA[Parameters for creating a timer.]]></Description><Summary><![CDATA[Parameters for creating a timer.]]></Summary><TypeParameters/><See action="createTimerWith" package="apama.analyticskit" type="BlockBase"><Description><![CDATA[Use this action to create a timer with the parameters.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="payload" private="true" type="any"><Description><![CDATA[The payload which will be passed when calling $timerTriggered action after the timer is triggered.]]></Description><Summary><![CDATA[The payload which will be passed when calling $timerTriggered action after the timer is triggered.]]></Summary><TypeParameters/></Member><Member name="time" private="true" type="float"><Description><![CDATA[The timer time. The exact interpretation of the value depends on the mode.]]></Description><Summary><![CDATA[The timer time. The exact interpretation of the value depends on the mode.]]></Summary><TypeParameters/></Member><Member name="mode" private="true" type="integer"><Description><![CDATA[The timer mode.]]></Description><Summary><![CDATA[The timer mode.]]></Summary><TypeParameters/></Member><Member name="partition" private="true" type="any"><Description><![CDATA[The partition value.]]></Description><Summary><![CDATA[The partition value.]]></Summary><TypeParameters/></Member><Member constant="true" name="MODE_RELATIVE" private="true" type="integer" typeValue="0"><Description><![CDATA[The relative mode for the timer.]]></Description><Summary><![CDATA[The relative mode for the timer.]]></Summary><TypeParameters/></Member><Member constant="true" name="MODE_ABSOLUTE" private="true" type="integer" typeValue="1"><Description><![CDATA[The absolute mode for the time.]]></Description><Summary><![CDATA[The absolute mode for the time.]]></Summary><TypeParameters/></Member><Member constant="true" name="MODE_RECURRING" private="true" type="integer" typeValue="2"><Description><![CDATA[The recurring timer mode.]]></Description><Summary><![CDATA[The recurring timer mode.]]></Summary><TypeParameters/></Member><Action name="withPartition" staticNature=""><Description><![CDATA[Specify partition which will be supplied back when $timerTriggered action is called. Defaults to empty.]]></Description><Summary><![CDATA[Specify partition which will be supplied back when $timerTriggered action is called. Defaults to empty.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit" type="TimerParams"><Description><![CDATA[The TimerParams with the partition value.]]></Description></Returns><Parameters><Parameter name="partition" type="any"><Description><![CDATA[The partition.]]></Description></Parameter></Parameters></Action><Action name="absolute" staticNature="static "><Description><![CDATA[Create a TimerParams for creating a timer for an absolute time. The maximum time delay possible for input events is taken into account when determining the actual trigger time.]]></Description><Summary><![CDATA[Create a TimerParams for creating a timer for an absolute time. The maximum time delay possible for input events is taken into account when determining the actual trigger time.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit" type="TimerParams"><Description><![CDATA[A new TimerParams for creating a timer for an absolute time.]]></Description></Returns><Parameters><Parameter name="timeSec" type="float"><Description><![CDATA[The absolute time in seconds at which timer should be triggered.]]></Description></Parameter></Parameters></Action><Action name="recurring" staticNature="static "><Description><![CDATA[Create a TimerParams for creating a recurring timer which is triggered every specified interval in seconds.]]></Description><Summary><![CDATA[Create a TimerParams for creating a recurring timer which is triggered every specified interval in seconds.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit" type="TimerParams"><Description><![CDATA[A new TimerParams for creating a recurring timer.]]></Description></Returns><Parameters><Parameter name="intervalSec" type="float"><Description><![CDATA[The interval in seconds.]]></Description></Parameter></Parameters></Action><Action name="withPayload" staticNature=""><Description><![CDATA[Specify payload which will be supplied back when $timerTriggered action is called.]]></Description><Summary><![CDATA[Specify payload which will be supplied back when $timerTriggered action is called.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit" type="TimerParams"><Description><![CDATA[The TimerParams with the payload.]]></Description></Returns><Parameters><Parameter name="payload" type="any"><Description><![CDATA[The payload data.]]></Description></Parameter></Parameters></Action><Action name="relative" staticNature="static "><Description><![CDATA[Create a TimerParams for creating a timer for a relative time. The timer is triggered after the specified duration from the timer creation time.]]></Description><Summary><![CDATA[Create a TimerParams for creating a timer for a relative time. The timer is triggered after the specified duration from the timer creation time.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit" type="TimerParams"><Description><![CDATA[A new TimerParams for creating a timer for a relative time.]]></Description></Returns><Parameters><Parameter name="durationSec" type="float"><Description><![CDATA[The duration in seconds after which the timer should be triggered.]]></Description></Parameter></Parameters></Action></Type><Type category="Event" name="BlockBase"><Description><![CDATA[The base event for all blocks. Every block implementation must have a $base field of this event type.]]></Description><Summary><![CDATA[The base event for all blocks. Every block implementation must have a $base field of this event type.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends><Reference package="apama.analyticskit" type="DroppedEvent"/></Sends><Listens/><Spawns/><Member constant="true" name="PROFILE_OUTPUT" type="integer" typeValue="0"><Description><![CDATA[Used to profile generation of output by an output block.]]></Description><Summary><![CDATA[Used to profile generation of output by an output block.]]></Summary><TypeParameters/></Member><Member constant="true" name="PROFILE_DROPPED" private="true" type="integer" typeValue="1"><Description><![CDATA[Used to report dropped event for profiling.]]></Description><Summary><![CDATA[Used to report dropped event for profiling.]]></Summary><TypeParameters/></Member><Member name="createBlockTimer" private="true" type="action"><Parameters><Parameter package="apama.analyticskit" type="TimerParams"/><Parameter type="string"/></Parameters><Returns package="apama.analyticskit" type="TimerHandle"/><Description/><Summary/><TypeParameters/></Member><Member name="cancelBlockTimer" private="true" type="action"><Parameters><Parameter package="apama.analyticskit" type="TimerHandle"/></Parameters><Description/><Summary/><TypeParameters/></Member><Member name="blockProcess" private="true" type="optional"><Parameters><Parameter package="apama.analyticskit.framework" type="Action"/></Parameters><Description><![CDATA[The $process action of a block. Called if block has inputs.]]></Description><Summary><![CDATA[The $process action of a block. Called if block has inputs.]]></Summary><TypeParameters/></Member><Member name="timerTriggered" private="true" type="optional"><Parameters><Parameter package="apama.analyticskit.framework" type="Action"/></Parameters><Description><![CDATA[The $timerTriggered action of a block. Called when timer is expired.]]></Description><Summary><![CDATA[The $timerTriggered action of a block. Called when timer is expired.]]></Summary><TypeParameters/></Member><Member name="fastTimerTriggered" private="true" type="action"><Parameters><Parameter package="apama.analyticskit" type="Activation"/><Parameter type="any"/></Parameters><Description><![CDATA[The direct reference to non-generic version of the $timerTriggered action if it matches specific signature. Used for faster invocation if present.]]></Description><Summary><![CDATA[The direct reference to non-generic version of the $timerTriggered action if it matches specific signature. Used for faster invocation if present.]]></Summary><TypeParameters/></Member><Member name="modelSchema" package="apama.analyticskit.framework" private="true" type="ModelSchema"><Description><![CDATA[Shared state required by all blocks.]]></Description><Summary><![CDATA[Shared state required by all blocks.]]></Summary><TypeParameters/></Member><Member name="blockDoesIO" private="true" type="action"><Parameters><Parameter type="string"/><Parameter package="apama.analyticskit.framework" type="BlockIO"/></Parameters><Description><![CDATA[Inform EvalManager of this block's input/ output. Callback to Framework. Arguments are INPUT/OUTPUT, BlockIO that identifies the stream.]]></Description><Summary><![CDATA[Inform EvalManager of this block's input/ output. Callback to Framework. Arguments are INPUT/OUTPUT, BlockIO that identifies the stream.]]></Summary><TypeParameters/></Member><Member constant="true" name="INPUT" private="true" type="string" typeValue="&quot;INPUT&quot;"><Description><![CDATA[Potential value for first argument of blockDoesIO.]]></Description><Summary><![CDATA[Potential value for first argument of blockDoesIO.]]></Summary><TypeParameters/></Member><Member constant="true" name="OUTPUT" private="true" type="string" typeValue="&quot;OUTPUT&quot;"><Description><![CDATA[Potential value for first argument of blockDoesIO.]]></Description><Summary><![CDATA[Potential value for first argument of blockDoesIO.]]></Summary><TypeParameters/></Member><Member name="inputTypeInfo" private="true" type="dictionary"><Parameters><Parameter type="string"/><Parameter package="apama.analyticskit.framework" type="ActionParamInfo"/></Parameters><Description><![CDATA[The type info of the inputs, keyed by full input name (input[.<index>] - index if multi-valued.)]]></Description><Summary><![CDATA[The type info of the inputs, keyed by full input name (input[.<index>] - index if multi-valued.)]]></Summary><TypeParameters/></Member><Member name="modelState" package="apama.analyticskit.framework" private="true" type="ModelRuntimeState"><Description><![CDATA[Current model runtime state.]]></Description><Summary><![CDATA[Current model runtime state.]]></Summary><TypeParameters/></Member><Member name="blockId" private="true" type="string"><Description><![CDATA[The ID of the block instance.]]></Description><Summary><![CDATA[The ID of the block instance.]]></Summary><TypeParameters/></Member><Member name="blockType" private="true" type="string"><Description><![CDATA[The type of the block instance.]]></Description><Summary><![CDATA[The type of the block instance.]]></Summary><TypeParameters/></Member><Member name="blockState" private="true" type="any"><Description><![CDATA[Current block runtime state.]]></Description><Summary><![CDATA[Current block runtime state.]]></Summary><TypeParameters/></Member><Member name="blockIndex" private="true" type="integer"><Description><![CDATA[The index of the block in the evaluation order. Used to directly access block from list of blocks order by evaluation order.]]></Description><Summary><![CDATA[The index of the block in the evaluation order. Used to directly access block from list of blocks order by evaluation order.]]></Summary><TypeParameters/></Member><Member name="receivesFromChain" private="true" type="boolean"><Description><![CDATA[Mark if this block is receiving inputs from model chain.]]></Description><Summary><![CDATA[Mark if this block is receiving inputs from model chain.]]></Summary><TypeParameters/></Member><Member name="blockProfiled" type="action"><Parameters><Parameter type="integer"/></Parameters><Description><![CDATA[Report block profiling.]]></Description><Summary><![CDATA[Report block profiling.]]></Summary><TypeParameters/></Member><Action name="getInputCount" staticNature=""><Description><![CDATA[Get the number of connections for an input.]]></Description><Summary><![CDATA[Get the number of connections for an input.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="integer"/><Parameters><Parameter name="input" type="string"/></Parameters></Action><Action name="getInputTypeName" staticNature=""><Description><![CDATA[Get the typename of an input.]]></Description><Summary><![CDATA[Get the typename of an input.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="input" type="string"/></Parameters></Action><Action name="profile" staticNature=""><Description><![CDATA[Called by blocks to notify of an operation performed for profiling purpose.]]></Description><Summary><![CDATA[Called by blocks to notify of an operation performed for profiling purpose.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="type" type="integer"><Description><![CDATA[The type of the oparation. See the constants starting with PROFILE for supported profiling operations.]]></Description></Parameter></Parameters></Action><Action name="getL10N_input" staticNature=""><Description><![CDATA[Get a localized sub-msg to identify an input

 Get a sub-message that can be passed as a member of params to getLocalizedException or getLocalizedSubMsg.]]></Description><Summary><![CDATA[Get a localized sub-msg to identify an input]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"><Description><![CDATA[localized sub-msg.]]></Description></Returns><Parameters><Parameter name="inputId" type="string"><Description><![CDATA[the input (without $input_ prefix)]]></Description></Parameter></Parameters></Action><Action name="getL10N_param" staticNature="static "><Description><![CDATA[Get a localized sub-msg to identify an parameter

 Get a sub-message that can be passed as a member of params to getLocalizedException or getLocalizedSubMsg.]]></Description><Summary><![CDATA[Get a localized sub-msg to identify an parameter]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"><Description><![CDATA[localized sub-msg.]]></Description></Returns><Parameters><Parameter name="parameterId" type="string"><Description><![CDATA[the parameter]]></Description></Parameter><Parameter name="blockOrParam" type="any"><Description><![CDATA[the block or parameters object (or a BlockBase object)]]></Description></Parameter></Parameters></Action><Action name="throwsOnEmpty" staticNature="static "><Description><![CDATA[Throws if value is empty.]]></Description><Summary><![CDATA[Throws if value is empty.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="value" type="string"><Description><![CDATA[that should not be empty]]></Description></Parameter><Parameter name="paramId" type="string"><Description><![CDATA[the name of the field (this will be translated)]]></Description></Parameter><Parameter name="blockOrParam" type="any"><Description><![CDATA[the block or parameters object (or a BlockBase object)]]></Description></Parameter></Parameters></Action><Action name="getBlockId" staticNature=""><Description><![CDATA[Get the block ID. Useful for debugging only.]]></Description><Summary><![CDATA[Get the block ID. Useful for debugging only.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/></Action><Action name="getModelTime" staticNature=""><Description><![CDATA[The current effective model time. This should be used instead of <tt>currentTime</tt> when access to the current time is required. The time for any absolute timer should be greather than this value.]]></Description><Summary><![CDATA[The current effective model time. This should be used instead of <tt>currentTime</tt> when access to the current time is required. The time for any absolute timer should be greather than this value.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="float"/></Action><Action name="isValueTypeCompatibleWithInput" private="true" staticNature=""><Description><![CDATA[Check if the valueType is compatible with the input type.]]></Description><Summary><![CDATA[Check if the valueType is compatible with the input type.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"/><Parameters><Parameter name="inputName" type="string"/><Parameter name="valueType" type="string"/></Parameters></Action><Action name="checkTimerTriggeredDefined" private="true" staticNature=""><Description><![CDATA[Check if a $timerTriggered action is defined by the block.]]></Description><Summary><![CDATA[Check if a $timerTriggered action is defined by the block.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="createTimerWith" staticNature=""><Description><![CDATA[Create a timer with the specified parameters. The $timerTriggered action of the block is called when the timer is triggered.]]></Description><Summary><![CDATA[Create a timer with the specified parameters. The $timerTriggered action of the block is called when the timer is triggered.]]></Summary><TypeParameters/><See action="cancelTimer" package="apama.analyticskit" type="BlockBase"><Description><![CDATA[Use this action to cancel the timer.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit" type="TimerHandle"><Description><![CDATA[The handle to the created timer which can be used to cancel it.]]></Description></Returns><Parameters><Parameter name="timerParams" package="apama.analyticskit" type="TimerParams"><Description><![CDATA[The parameters for specifying the timer type and other information about it.]]></Description></Parameter></Parameters></Action><Action name="getL10N_output" staticNature=""><Description><![CDATA[Get a localized sub-msg to identify an output

 Get a sub-message that can be passed as a member of params to getLocalizedException or getLocalizedSubMsg.]]></Description><Summary><![CDATA[Get a localized sub-msg to identify an output]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"><Description><![CDATA[localized sub-msg.]]></Description></Returns><Parameters><Parameter name="outputId" type="string"><Description><![CDATA[the output (without $setOutput_ prefix)]]></Description></Parameter></Parameters></Action><Action name="cancelTimer" staticNature=""><Description><![CDATA[Cancel the timer specified by the timer handle. It throws <tt>IllegalArgumentException</tt> if the timer is already canceled or triggered.]]></Description><Summary><![CDATA[Cancel the timer specified by the timer handle. It throws <tt>IllegalArgumentException</tt> if the timer is already canceled or triggered.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="handle" package="apama.analyticskit" type="TimerHandle"><Description><![CDATA[The handle to a previously created timer.]]></Description></Parameter></Parameters></Action><Action name="sendsOutput" staticNature=""><Description><![CDATA[Notify framework that this block is an output block.

 An output block sends events to outside the model, potentially to other models. This must be called during $validate, not afterwards.]]></Description><Summary><![CDATA[Notify framework that this block is an output block.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="eventTypeName" type="string"><Description><![CDATA[The fully-qualified type name the block sends.]]></Description></Parameter><Parameter name="fields" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="any"/></Parameters><Description><![CDATA[The field values the block sends that, together with partitionValue, identifies a stream of events.]]></Description></Parameter><Parameter name="partitionValue" type="any"><Description><![CDATA[The value that identifies a partition of events.]]></Description></Parameter></Parameters></Action><Action name="callProcess" private="true" staticNature=""><Description><![CDATA[Call $process action. Get values for the inputs from the activation.]]></Description><Summary><![CDATA[Call $process action. Get values for the inputs from the activation.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="cc" package="apama.analyticskit.framework" type="CallContext"/></Parameters></Action><Action name="listensForInput" staticNature=""><Description><![CDATA[Notify framework that this block is an input block.

 An input block receives events from outside the model, potentially from other models. This must be called during $validate, not afterwards.]]></Description><Summary><![CDATA[Notify framework that this block is an input block.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="eventTypeName" type="string"><Description><![CDATA[The fully-qualified type name the block listens for.]]></Description></Parameter><Parameter name="fields" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="any"/></Parameters><Description><![CDATA[The field values the block sends that, together with partitionValue, identifies a stream of events.]]></Description></Parameter><Parameter name="partitionValue" type="any"><Description><![CDATA[The value that identifies a partition of events.]]></Description></Parameter></Parameters></Action><Action name="createTimer" staticNature=""><Description><![CDATA[Create a timer with the specified duration. The $timerTriggered action of the block is called when the timer is triggered.]]></Description><Summary><![CDATA[Create a timer with the specified duration. The $timerTriggered action of the block is called when the timer is triggered.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="durationSec" type="float"><Description><![CDATA[The duration in seconds after which the timer should be triggered.]]></Description></Parameter><Parameter name="payload" type="any"><Description><![CDATA[The payload value which will be supplied back when $timerTriggred action is called.]]></Description></Parameter></Parameters></Action><Action name="droppedEvent" staticNature=""><Description><![CDATA[Notify framework that this block has dropped an input event.]]></Description><Summary><![CDATA[Notify framework that this block has dropped an input event.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends><Reference package="apama.analyticskit" type="DroppedEvent"/></Sends><Listens/><Spawns/><Parameters><Parameter name="evt" type="any"><Description><![CDATA[the event that was dropped]]></Description></Parameter><Parameter name="time" type="float"><Description><![CDATA[the timestamp]]></Description></Parameter></Parameters></Action></Type><Type category="Event" name="Value"><Description><![CDATA[The value with extra properties.]]></Description><Summary><![CDATA[The value with extra properties.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="value" type="any"><Description><![CDATA[The actual value]]></Description><Summary><![CDATA[The actual value]]></Summary><TypeParameters/></Member><Member name="timestamp" type="float"><Description><![CDATA[The time of the signal]]></Description><Summary><![CDATA[The time of the signal]]></Summary><TypeParameters/></Member><Member name="properties" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="any"/></Parameters><Description><![CDATA[Extra propertied assosiated with the value.]]></Description><Summary><![CDATA[Extra propertied assosiated with the value.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="ConfigPropertyData" private="true"><Description/><Summary/><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="PROPERTY_NAME_PREFIX" type="string" typeValue="&quot;analyticsBuilder.&quot;"><TypeParameters/></Member><Member constant="true" name="STATUS_PROPERTY_PREFIX" type="string" typeValue="&quot;status_&quot;"><TypeParameters/></Member><Member constant="true" name="METADATA_PORT_PROPERTY_NAME" type="string" typeValue="&quot;serve-metadata.port&quot;"><TypeParameters/></Member><Member constant="true" name="NUM_WORKERS_PROPERTY_NAME" type="string" typeValue="&quot;analyticsBuilder.numWorkerThreads&quot;"><TypeParameters/></Member><Member constant="true" name="TIME_DELAY_PROPERTY_NAME" type="string" typeValue="&quot;analyticsBuilder.timedelay_secs&quot;"><TypeParameters/></Member><Member constant="true" name="DEFAULT_TIMEOUT_PROPERTY_NAME" type="string" typeValue="&quot;analyticsBuilder.default_timeout_secs&quot;"><TypeParameters/></Member><Member constant="true" name="LOGGING_THROTTLE_PROPERTY_NAME" type="string" typeValue="&quot;analyticsBuilder.logging_throttle_secs&quot;"><TypeParameters/></Member><Member constant="true" name="MINIMUM_WAIT_TIME_PROPERTY_NAME" type="string" typeValue="&quot;analyticsBuilder.minimum_wait_time_secs&quot;"><TypeParameters/></Member><Member constant="true" name="STATUS_PERIOD_PROPERTY_NAME" type="string" typeValue="&quot;analyticsBuilder.status_period_secs&quot;"><TypeParameters/></Member><Member constant="true" name="MATCH_STRING_PROPERTY_NAME" type="string" typeValue="&quot;analyticsBuilder.status_device_name&quot;"><TypeParameters/></Member><Member constant="true" name="SEND_TYPE_PROPERTY_NAME" type="string" typeValue="&quot;analyticsBuilder.status_send_type&quot;"><TypeParameters/></Member><Member constant="true" name="EVENT_TYPE_PROPERTY_NAME" type="string" typeValue="&quot;analyticsBuilder.status_event_type&quot;"><TypeParameters/></Member><Member constant="true" name="EVENT_TEXT_PROPERTY_NAME" type="string" typeValue="&quot;analyticsBuilder.status_event_text&quot;"><TypeParameters/></Member><Action name="getStatusProperties" staticNature="static "><Description><![CDATA[Returns a dictionary with the key configurable properties.]]></Description><Summary><![CDATA[Returns a dictionary with the key configurable properties.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="dictionary"><Parameters><Parameter type="string"/><Parameter type="string"/></Parameters></Returns></Action><Action name="getKeyProperties" staticNature="static "><Description><![CDATA[Returns a dictionary with the key configurable properties.]]></Description><Summary><![CDATA[Returns a dictionary with the key configurable properties.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="dictionary"><Parameters><Parameter type="string"/><Parameter type="boolean"/></Parameters></Returns></Action></Type><Type category="Event" name="TimerHandle"><Description><![CDATA[A handle to the created timer.]]></Description><Summary><![CDATA[A handle to the created timer.]]></Summary><TypeParameters/><See action="cancelTimer" package="apama.analyticskit" type="BlockBase"><Description><![CDATA[Use this action to cancel the timer.]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="id" type="string"><Description><![CDATA[The unique ID of the timer.]]></Description><Summary><![CDATA[The unique ID of the timer.]]></Summary><TypeParameters/></Member></Type><Type category="Monitor" name="GenericForwarder"><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="apama.analyticskit" type="RequestForwarding"/></Listens></Type></Package><Package depth="../../../" display="apama.analyticskit.framework" name="apama.analyticskit.framework"><Type category="Event" name="JSONParam" private="true"><Description/><Summary/><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="id" type="string"><TypeParameters/></Member><Member name="value" type="any"><TypeParameters/></Member><Member name="type" type="optional"><Parameters><Parameter type="string"/></Parameters><TypeParameters/></Member><Member name="semanticType" type="optional"><Parameters><Parameter type="string"/></Parameters><TypeParameters/></Member><Action name="toConfig" staticNature=""><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/></Action></Type><Type category="Event" name="JSONModel" private="true"><Description/><Summary/><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="nodeDataArray" type="sequence"><Parameters><Parameter package="apama.analyticskit.framework" type="JSONNode"/></Parameters><TypeParameters/></Member><Member name="linkDataArray" type="sequence"><Parameters><Parameter package="apama.analyticskit.framework" type="JSONLink"/></Parameters><TypeParameters/></Member><Member name="modelProperties" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="any"/></Parameters><TypeParameters/></Member><Action name="toModelState" staticNature=""><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit" type="ModelState"/><Parameters><Parameter name="modelId" type="string"/></Parameters></Action><Action name="fromModelState" staticNature="static "><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit.framework" type="JSONModel"/><Parameters><Parameter name="model" package="apama.analyticskit" type="ModelState"/></Parameters></Action></Type><Type category="Event" name="StreamIO_MapValue" private="true"><Description><![CDATA[StreamIOMap internal value.

 The non-partitioned part of StreamIO, used as a key in StreamIOMap.mapping.]]></Description><Summary><![CDATA[StreamIOMap internal value.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="wildcardEntry" type="any"><TypeParameters/></Member><Member name="nonWildcardEntry" type="dictionary"><Parameters><Parameter type="any"/><Parameter type="any"/></Parameters><TypeParameters/></Member><Action name="empty" staticNature=""><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"/></Action></Type><Type category="Event" name="Action" private="true"><Description/><Summary/><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="name" type="string"><Description><![CDATA[The name of the action.]]></Description><Summary><![CDATA[The name of the action.]]></Summary><TypeParameters/></Member><Member name="paramsInfo" type="sequence"><Parameters><Parameter package="apama.analyticskit.framework" type="ActionParamInfo"/></Parameters><Description><![CDATA[The information about the action paramters.]]></Description><Summary><![CDATA[The information about the action paramters.]]></Summary><TypeParameters/></Member><Member name="act" type="action"><Parameters><Parameter type="sequence"><Parameters><Parameter type="any"/></Parameters></Parameter></Parameters><Returns type="any"/><Description><![CDATA[The generic action to call.]]></Description><Summary><![CDATA[The generic action to call.]]></Summary><TypeParameters/></Member><Member name="_emptyOptValue" private="true" type="optional"><Parameters><Parameter package="apama.analyticskit" type="Value"/></Parameters><Description><![CDATA[Just kept around to reduce garbage.]]></Description><Summary><![CDATA[Just kept around to reduce garbage.]]></Summary><TypeParameters/></Member><Member name="defaltInputValues" type="sequence"><Parameters><Parameter type="any"/></Parameters><Description><![CDATA[Cache the default values for the input parameters. Default value for an input parameter is used if it is not connected or no value is provided yet.]]></Description><Summary><![CDATA[Cache the default values for the input parameters. Default value for an input parameter is used if it is not connected or no value is provided yet.]]></Summary><TypeParameters/></Member><Member name="params" type="sequence"><Parameters><Parameter type="any"/></Parameters><Description><![CDATA[Sequence of parameters used to call the generic action. Use it so that we don't have to create a sequence for every call which would be resized.]]></Description><Summary><![CDATA[Sequence of parameters used to call the generic action. Use it so that we don't have to create a sequence for every call which would be resized.]]></Summary><TypeParameters/></Member><Member name="returnType" type="string"><Description><![CDATA[Return type.]]></Description><Summary><![CDATA[Return type.]]></Summary><TypeParameters/></Member><Action name="call" staticNature=""><Description><![CDATA[Call the action using values as required from the calling context.]]></Description><Summary><![CDATA[Call the action using values as required from the calling context.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="ctx" package="apama.analyticskit.framework" type="CallContext"/></Parameters></Action><Action name="init" staticNature=""><Description><![CDATA[Perform any initilization required.]]></Description><Summary><![CDATA[Perform any initilization required.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="valueIfIsValue" private="true" staticNature=""><Description><![CDATA[Extract the 'Value' if it is a Value:]]></Description><Summary><![CDATA[Extract the 'Value' if it is a Value:]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="optional"><Parameters><Parameter package="apama.analyticskit" type="Value"/></Parameters></Returns><Parameters><Parameter name="value" type="any"/></Parameters></Action><Action name="extractBareValue" private="true" staticNature=""><Description><![CDATA[Extract the 'bare' value if needed (from Value)]]></Description><Summary><![CDATA[Extract the 'bare' value if needed (from Value)]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="value" type="any"/></Parameters></Action><Action name="evaluate" staticNature=""><Description><![CDATA[Call the action using values as required from the calling context.]]></Description><Summary><![CDATA[Call the action using values as required from the calling context.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"><Description><![CDATA[result of the call.]]></Description></Returns><Parameters><Parameter name="ctx" package="apama.analyticskit.framework" type="CallContext"/></Parameters></Action><Action name="setInputValue" private="true" staticNature=""><Description/><Summary/><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="ctx" package="apama.analyticskit.framework" type="CallContext"/><Parameter name="paramInfo" package="apama.analyticskit.framework" type="ActionParamInfo"/><Parameter name="index" type="integer"/></Parameters></Action></Type><Type category="Event" name="__EvalManager" private="true"><Description><![CDATA[for forcing injection orderings.]]></Description><Summary><![CDATA[for forcing injection orderings.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Type><Type category="Event" name="RequestWorkers"><Description><![CDATA[Request a copy of Workers be routed.]]></Description><Summary><![CDATA[Request a copy of Workers be routed.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Type><Type category="Event" name="ScheduleTimer" private="true"><Description><![CDATA[Schedule a timer for the given time in the future.]]></Description><Summary><![CDATA[Schedule a timer for the given time in the future.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="targetTime" type="float"><Description><![CDATA[The time at which the timer should trigger.]]></Description><Summary><![CDATA[The time at which the timer should trigger.]]></Summary><TypeParameters/></Member><Member name="modelId" type="string"><Description><![CDATA[The id of the requester model.]]></Description><Summary><![CDATA[The id of the requester model.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="ModelProfileRequestCompleted"><Description><![CDATA[Sent back when all models within a worker have published profiled data.]]></Description><Summary><![CDATA[Sent back when all models within a worker have published profiled data.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="CHANNEL" type="string" typeValue="&quot;analytics_model_profiling_updates&quot;"><Description><![CDATA[The channel to which to send the event.]]></Description><Summary><![CDATA[The channel to which to send the event.]]></Summary><TypeParameters/></Member><Member name="requestId" type="integer"><TypeParameters/></Member><Member name="workerId" type="integer"><Description><![CDATA[Which worker this profile is from.]]></Description><Summary><![CDATA[Which worker this profile is from.]]></Summary><TypeParameters/></Member><Member name="numWorkers" type="integer"><Description><![CDATA[how many workers this needs to be aggregated over.]]></Description><Summary><![CDATA[how many workers this needs to be aggregated over.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="ModelSchema" private="true"><Description><![CDATA[Schema information for the model. This is read-only information derived from the model.]]></Description><Summary><![CDATA[Schema information for the model. This is read-only information derived from the model.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="usedOutputCount" type="integer"><Description><![CDATA[Total number of used Outputs. Used for creating Activation record with correct size.]]></Description><Summary><![CDATA[Total number of used Outputs. Used for creating Activation record with correct size.]]></Summary><TypeParameters/></Member><Member name="outputTypes" type="sequence"><Parameters><Parameter type="string"/></Parameters><Description><![CDATA[The types of each output]]></Description><Summary><![CDATA[The types of each output]]></Summary><TypeParameters/></Member><Member name="modelScopeParameters" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="any"/></Parameters><Description><![CDATA[Model scoped paramters.]]></Description><Summary><![CDATA[Model scoped paramters.]]></Summary><TypeParameters/></Member><Member name="modelOffsetTime" type="float"><Description><![CDATA[The offset in seconds used for the model when calculating current model time or actual time for an absolute timer.]]></Description><Summary><![CDATA[The offset in seconds used for the model when calculating current model time or actual time for an absolute timer.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="StreamIOMap"><Description><![CDATA[Map from StreamIO to a value.

 StreamIO is like a dictionary with a StreamIO key. The partition field value is treated specially.  In some methods (hasKey, getAll) a wildcard in either the key provided or an entry in the map will be treated as a match. add, remove methods require an exact match.]]></Description><Summary><![CDATA[Map from StreamIO to a value.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="mapping" private="true" type="dictionary"><Parameters><Parameter package="apama.analyticskit.framework" type="StreamIO_NonPart"/><Parameter package="apama.analyticskit.framework" type="StreamIO_MapValue"/></Parameters><Description><![CDATA[Mapping by non-partitioned fields to MapValue.]]></Description><Summary><![CDATA[Mapping by non-partitioned fields to MapValue.]]></Summary><TypeParameters/></Member><Action name="add" staticNature=""><Description><![CDATA[Add key, value to the map.

 Replaces any existing value (using exact matching)]]></Description><Summary><![CDATA[Add key, value to the map.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="key" package="apama.analyticskit.framework" type="StreamIO"><Description><![CDATA[the StreamIO key.]]></Description></Parameter><Parameter name="value" type="any"><Description><![CDATA[the value to add.]]></Description></Parameter></Parameters></Action><Action name="hasKey" staticNature=""><Description><![CDATA[Query if any entries overlap the specified key.]]></Description><Summary><![CDATA[Query if any entries overlap the specified key.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[true if any values (wildcard or other partition values) overlap with the specified key.]]></Description></Returns><Parameters><Parameter name="key" package="apama.analyticskit.framework" type="StreamIO"><Description><![CDATA[the StreamIO key.]]></Description></Parameter></Parameters></Action><Action name="getAll" staticNature=""><Description><![CDATA[Look up all entries overlapping the specified key.

 Returns all entries (if there are any).  Wildcard and other values are considered to be overlapping.]]></Description><Summary><![CDATA[Look up all entries overlapping the specified key.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="sequence"><Parameters><Parameter type="any"/></Parameters></Returns><Parameters><Parameter name="key" package="apama.analyticskit.framework" type="StreamIO"><Description><![CDATA[the StreamIO key.]]></Description></Parameter></Parameters></Action><Action name="getExactOrAdd" staticNature=""><Description><![CDATA[Lookup exact key or add the provided toAdd value.

 Replaces any existing value (using exact matching)]]></Description><Summary><![CDATA[Lookup exact key or add the provided toAdd value.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"><Description><![CDATA[a sequence of the values, wildcard and any overlapping with the specified key.]]></Description></Returns><Parameters><Parameter name="key" package="apama.analyticskit.framework" type="StreamIO"><Description><![CDATA[the StreamIO key.]]></Description></Parameter><Parameter name="toAdd" type="any"><Description><![CDATA[if no match, this value is added to the map and returned.]]></Description></Parameter></Parameters></Action><Action name="remove" staticNature=""><Description><![CDATA[Remove exact key or throw an exception.]]></Description><Summary><![CDATA[Remove exact key or throw an exception.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="key" package="apama.analyticskit.framework" type="StreamIO"><Description><![CDATA[the StreamIO key.]]></Description></Parameter></Parameters></Action><Action name="getExactOrThrow" staticNature=""><Description><![CDATA[Lookup exact key or throw an exception.]]></Description><Summary><![CDATA[Lookup exact key or throw an exception.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"><Description><![CDATA[the value of the entry in the map.]]></Description></Returns><Parameters><Parameter name="key" package="apama.analyticskit.framework" type="StreamIO"><Description><![CDATA[the StreamIO key.]]></Description></Parameter></Parameters></Action></Type><Type category="Event" name="CancelTimer" private="true"><Description><![CDATA[Cancel a scheduled timer.]]></Description><Summary><![CDATA[Cancel a scheduled timer.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="targetTime" private="true" type="float"><Description><![CDATA[The target time of the timer to cancel.]]></Description><Summary><![CDATA[The target time of the timer to cancel.]]></Summary><TypeParameters/></Member><Member name="modelId" type="string"><Description><![CDATA[The id of the requester model.]]></Description><Summary><![CDATA[The id of the requester model.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="ModelRuntimeState" private="true"><Description><![CDATA[Current run time state of the model.]]></Description><Summary><![CDATA[Current run time state of the model.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="timerListeners" type="dictionary"><Parameters><Parameter type="float"/><Parameter package="apama.analyticskit.framework" type="TimerListenerInfo"/></Parameters><Description><![CDATA[Currently active wait listeners keyed against the absolute time at which they are going to trigger.]]></Description><Summary><![CDATA[Currently active wait listeners keyed against the absolute time at which they are going to trigger.]]></Summary><TypeParameters/></Member><Member name="timers" type="dictionary"><Parameters><Parameter type="any"/><Parameter type="dictionary"><Parameters><Parameter type="string"/><Parameter package="apama.analyticskit.framework" type="TimerInfo"/></Parameters></Parameter></Parameters><Description><![CDATA[All active timers keyed against the partition and timer id.]]></Description><Summary><![CDATA[All active timers keyed against the partition and timer id.]]></Summary><TypeParameters/></Member><Member name="numberOfBlocks" type="integer"><Description><![CDATA[Number of block in the evalution order.]]></Description><Summary><![CDATA[Number of block in the evalution order.]]></Summary><TypeParameters/></Member><Member name="activationPrototype" package="apama.analyticskit" type="Activation"><Description><![CDATA[Prototype of perpartition.latchedActivation]]></Description><Summary><![CDATA[Prototype of perpartition.latchedActivation]]></Summary><TypeParameters/></Member><Member name="partitionStates" type="dictionary"><Parameters><Parameter type="any"/><Parameter package="apama.analyticskit.framework" type="PerPartition"/></Parameters><Description><![CDATA[State per partition for this model in a worker.]]></Description><Summary><![CDATA[State per partition for this model in a worker.]]></Summary><TypeParameters/></Member><Member name="broadcastState" package="apama.analyticskit.framework" type="PerPartition"><Description><![CDATA[The explicit state for Broadcast partition. Used as prototype to create initial state for new partitions.]]></Description><Summary><![CDATA[The explicit state for Broadcast partition. Used as prototype to create initial state for new partitions.]]></Summary><TypeParameters/></Member><Member name="broadcastObject" package="apama.analyticskit" type="Partition_Broadcast"><Description><![CDATA[The partition object to use as key in timers and state dictionary so that timers and state are shared across multiple broadcast objects.]]></Description><Summary><![CDATA[The partition object to use as key in timers and state dictionary so that timers and state are shared across multiple broadcast objects.]]></Summary><TypeParameters/></Member><Action name="init" staticNature=""><Description><![CDATA[Initialized the state object.]]></Description><Summary><![CDATA[Initialized the state object.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="blocksCount" type="integer"/></Parameters></Action><Action name="getPartitionState" staticNature=""><Description><![CDATA[Returns the state of the specified partition, if partition is new then populate it.]]></Description><Summary><![CDATA[Returns the state of the specified partition, if partition is new then populate it.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit.framework" type="PerPartition"/><Parameters><Parameter name="partition" type="any"/></Parameters></Action><Action name="getAllBroadcastTimers" staticNature=""><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="dictionary"><Parameters><Parameter type="string"/><Parameter package="apama.analyticskit.framework" type="TimerInfo"/></Parameters></Returns></Action><Action name="createStateFor" staticNature=""><Description><![CDATA[Create state for provided partiton.]]></Description><Summary><![CDATA[Create state for provided partiton.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit.framework" type="PerPartition"/><Parameters><Parameter name="partition" type="any"/></Parameters></Action></Type><Type category="Event" name="ActionParamKind" private="true"><Description/><Summary/><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="ACTIVATION" type="integer" typeValue="0"><Description><![CDATA[The activation.]]></Description><Summary><![CDATA[The activation.]]></Summary><TypeParameters/></Member><Member constant="true" name="INPUT" type="integer" typeValue="1"><Description><![CDATA[The block input. Used only for the $process action.]]></Description><Summary><![CDATA[The block input. Used only for the $process action.]]></Summary><TypeParameters/></Member><Member constant="true" name="MODEL_SCOPE_PARAMS" type="integer" typeValue="2"><Description><![CDATA[The model scope parameters.]]></Description><Summary><![CDATA[The model scope parameters.]]></Summary><TypeParameters/></Member><Member constant="true" name="BLOCK_STATE" type="integer" typeValue="3"><Description><![CDATA[The block state. Used only for the $process action.]]></Description><Summary><![CDATA[The block state. Used only for the $process action.]]></Summary><TypeParameters/></Member><Member constant="true" name="PAYLOAD" type="integer" typeValue="4"><Description><![CDATA[The callback payload. Used only by timer API to pass back specified value in the $timerTriggered action.]]></Description><Summary><![CDATA[The callback payload. Used only by timer API to pass back specified value in the $timerTriggered action.]]></Summary><TypeParameters/></Member><Member constant="true" name="TIMER_HANDLE" type="integer" typeValue="5"><Description><![CDATA[The timer handle. Used only by the $timerTriggered action.]]></Description><Summary><![CDATA[The timer handle. Used only by the $timerTriggered action.]]></Summary><TypeParameters/></Member><Member constant="true" name="CONFIG_PROPERTY_VALUES" type="integer" typeValue="6"><Description><![CDATA[The time delay. Used only by the $process and $validate action.]]></Description><Summary><![CDATA[The time delay. Used only by the $process and $validate action.]]></Summary><TypeParameters/></Member><Action name="stringify" staticNature="static "><Description><![CDATA[Return the string name of the input kind to use for logging.]]></Description><Summary><![CDATA[Return the string name of the input kind to use for logging.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="kind" type="integer"/></Parameters></Action></Type><Type category="Event" name="WorkerTerminated"><Description><![CDATA[Sent by framework from workers to proxy monitor.]]></Description><Summary><![CDATA[Sent by framework from workers to proxy monitor.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="modelId" type="string"><TypeParameters/></Member><Member name="workerId" type="integer"><TypeParameters/></Member><Member name="exception" type="optional"><Parameters><Parameter type="com.apama.exceptions.Exception"/></Parameters><TypeParameters/></Member></Type><Type category="Event" name="Localization"><Description><![CDATA[Helper utilities for localization.]]></Description><Summary><![CDATA[Helper utilities for localization.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="LOCALIZED_EXCEPTION" type="string" typeValue="&quot;LocalizedException&quot;"><Description><![CDATA[The Exception Type for localized exceptions]]></Description><Summary><![CDATA[The Exception Type for localized exceptions]]></Summary><TypeParameters/></Member><Member constant="true" name="BLOCK_ID" private="true" type="string" typeValue="&quot;blockId&quot;"><Description><![CDATA[Block ID property name in JSON.]]></Description><Summary><![CDATA[Block ID property name in JSON.]]></Summary><TypeParameters/></Member><Member constant="true" name="BLOCK_TYPE" private="true" type="string" typeValue="&quot;blockType&quot;"><Description><![CDATA[Block Type property name in JSON.]]></Description><Summary><![CDATA[Block Type property name in JSON.]]></Summary><TypeParameters/></Member><Member constant="true" name="MSG_ID" private="true" type="string" typeValue="&quot;msgId&quot;"><Description><![CDATA[Message ID property name in JSON.]]></Description><Summary><![CDATA[Message ID property name in JSON.]]></Summary><TypeParameters/></Member><Member constant="true" name="MSG_PARAMS" private="true" type="string" typeValue="&quot;msgParams&quot;"><Description><![CDATA[Message params property name in JSON.]]></Description><Summary><![CDATA[Message params property name in JSON.]]></Summary><TypeParameters/></Member><Member constant="true" name="MEMSTORE_NAME" private="true" type="string" typeValue="&quot;apama.analyticskit.Localization&quot;"><Description><![CDATA[Name of memorystore Store, Table for messages.]]></Description><Summary><![CDATA[Name of memorystore Store, Table for messages.]]></Summary><TypeParameters/></Member><Action name="extractLocalizedBlob" staticNature="static "><Description><![CDATA[Get the localized blob from an exception (if it is a localized exception)]]></Description><Summary><![CDATA[Get the localized blob from an exception (if it is a localized exception)]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"><Description><![CDATA[an object that can be passed to renderLocalized (may be just a string)]]></Description></Returns><Parameters><Parameter name="e" type="com.apama.exceptions.Exception"/></Parameters></Action><Action name="setExceptionStackTrace" staticNature="static "><Description><![CDATA[Copy stacktrace.

 Copy (strictly, append) the stacktrace from src to tgt.]]></Description><Summary><![CDATA[Copy stacktrace.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="com.apama.exceptions.Exception"><Description><![CDATA[tgt]]></Description></Returns><Parameters><Parameter name="tgt" type="com.apama.exceptions.Exception"><Description><![CDATA[- where to put the stacktrace.]]></Description></Parameter><Parameter name="src" type="com.apama.exceptions.Exception"><Description><![CDATA[- where to get the stacktrace from.]]></Description></Parameter></Parameters></Action><Action name="renderLocalizedExceptionWithStackTrace" staticNature="static "><Description><![CDATA[Render a localized message including stack trace. Renders a message into the 'default' language (typically English)]]></Description><Summary><![CDATA[Render a localized message including stack trace. Renders a message into the 'default' language (typically English)]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="e" type="com.apama.exceptions.Exception"/></Parameters></Action><Action name="getLocalizedException_basic" staticNature="static "><Description><![CDATA[Get a localized exception with no parameters.]]></Description><Summary><![CDATA[Get a localized exception with no parameters.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="com.apama.exceptions.Exception"/><Parameters><Parameter name="msgId" type="string"><Description><![CDATA[- a Message ID]]></Description></Parameter></Parameters></Action><Action name="getLocalizedSubMsg_json" staticNature="static "><Description><![CDATA[Get a localized sub-message in JSON form.

 Get a sub-message that can be passed as a member of params to getLocalizedException or getLocalizedSubMsg recursively.]]></Description><Summary><![CDATA[Get a localized sub-message in JSON form.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"><Description><![CDATA[JSON for sending to the UI.]]></Description></Returns><Parameters><Parameter name="msgId" type="string"><Description><![CDATA[-  a Message ID]]></Description></Parameter><Parameter name="params" type="sequence"><Parameters><Parameter type="any"/></Parameters><Description><![CDATA[- a list of parameters - could be simple values (string/ float/ etc) or result from getLocalizedSubMsg.]]></Description></Parameter></Parameters></Action><Action name="isExceptionLocalized" staticNature="static "><Description><![CDATA[Return if this exception is a localized exception.]]></Description><Summary><![CDATA[Return if this exception is a localized exception.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"/><Parameters><Parameter name="e" type="com.apama.exceptions.Exception"/></Parameters></Action><Action name="openMessagesTable" private="true" staticNature="static "><Description><![CDATA[Get a table for messages.]]></Description><Summary><![CDATA[Get a table for messages.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="com.apama.memorystore.Table"/></Action><Action name="getLocalizedSubMsg" staticNature="static "><Description><![CDATA[Get a localized sub-message.

 Get a sub-message that can be passed as a member of params to getLocalizedException or getLocalizedSubMsg recursively.]]></Description><Summary><![CDATA[Get a localized sub-message.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"><Description><![CDATA[a value that can be passed to getLocalizedException in params.]]></Description></Returns><Parameters><Parameter name="msgId" type="string"><Description><![CDATA[-  a Message ID]]></Description></Parameter><Parameter name="params" type="sequence"><Parameters><Parameter type="any"/></Parameters><Description><![CDATA[- a list of parameters - could be simple values (string/ float/ etc) or result from getLocalizedSubMsg.]]></Description></Parameter></Parameters></Action><Action name="renderImpl" staticNature="static "><Description><![CDATA[Implementation of rendering an error.]]></Description><Summary><![CDATA[Implementation of rendering an error.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="obj" type="any"><Description><![CDATA[the blob to localize.]]></Description></Parameter><Parameter name="t" type="com.apama.memorystore.Table"><Description><![CDATA[the Table of the messages.]]></Description></Parameter></Parameters></Action><Action name="renderLocalizedException" staticNature="static "><Description><![CDATA[Render a localized message Renders a message into the 'default' language (typically English)]]></Description><Summary><![CDATA[Render a localized message Renders a message into the 'default' language (typically English)]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="e" type="com.apama.exceptions.Exception"/></Parameters></Action><Action name="getLocalizedException" staticNature="static "><Description><![CDATA[Get a localized exception with parameters.]]></Description><Summary><![CDATA[Get a localized exception with parameters.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="com.apama.exceptions.Exception"/><Parameters><Parameter name="msgId" type="string"><Description><![CDATA[- a Message ID]]></Description></Parameter><Parameter name="params" type="sequence"><Parameters><Parameter type="any"/></Parameters><Description><![CDATA[- a list of parameters - could be simple values (string/ float/ etc) or result from getLocalizedSubMsg]]></Description></Parameter></Parameters></Action><Action name="renderLocalized" staticNature="static "><Description><![CDATA[Convert a localized blob to a rendered string in the default language]]></Description><Summary><![CDATA[Convert a localized blob to a rendered string in the default language]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="blob" type="any"/></Parameters></Action><Action name="getLocalizedException_extra" staticNature="static "><Description><![CDATA[Get a localized exception with parameters and extra details.]]></Description><Summary><![CDATA[Get a localized exception with parameters and extra details.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="com.apama.exceptions.Exception"/><Parameters><Parameter name="msgId" type="string"><Description><![CDATA[- a Message ID]]></Description></Parameter><Parameter name="params" type="sequence"><Parameters><Parameter type="any"/></Parameters><Description><![CDATA[- a list of parameters - could be simple values (string/ float/ etc) or result from getLocalizedSubMsg]]></Description></Parameter><Parameter name="extraDetails" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="any"/></Parameters><Description><![CDATA[- a dictionary of extraDetails]]></Description></Parameter></Parameters></Action></Type><Type category="Event" name="StreamIO"><Description><![CDATA[Describes an input/ output between models]]></Description><Summary><![CDATA[Describes an input/ output between models]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="eventTypeName" type="string"><Description><![CDATA[Event type name]]></Description><Summary><![CDATA[Event type name]]></Summary><TypeParameters/></Member><Member name="fields" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="any"/></Parameters><Description><![CDATA[Fields of the input/ output.

 Representative of the fields excluding the in partition field  - does not have to match the actual fields; this is a representation that identifies a stream of events]]></Description><Summary><![CDATA[Fields of the input/ output.]]></Summary><TypeParameters/></Member><Member name="partitionValue" type="any"><Description><![CDATA[Partition value.

 Representative of the partition value - does not have to (but typically will) match the actual field in the events; this is a representation that identifies a stream of events]]></Description><Summary><![CDATA[Partition value.]]></Summary><TypeParameters/></Member><Action name="fromBlockIO" staticNature="static "><Description><![CDATA[Convert from a BlockIO to a StreamIO object.]]></Description><Summary><![CDATA[Convert from a BlockIO to a StreamIO object.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit.framework" type="StreamIO"/><Parameters><Parameter name="bio" package="apama.analyticskit.framework" type="BlockIO"><Description><![CDATA[the BlockIO object to convert from.]]></Description></Parameter><Parameter name="realDevice" type="boolean"><Description><![CDATA[if the Block is for an alias partition, picks whether to return the real device (true) or the virtual device (false). No effect if not a Partition_Alias.]]></Description></Parameter></Parameters></Action></Type><Type category="Event" name="TimerListenerInfo" private="true"><Description><![CDATA[Information about a wait listener created in response to the create timer request from a block. Only one wait listener is created for a target time. If multiple timers are required for a single target time then they are tracked in the instance of TimerListenerInfo.]]></Description><Summary><![CDATA[Information about a wait listener created in response to the create timer request from a block. Only one wait listener is created for a target time. If multiple timers are required for a single target time then they are tracked in the instance of TimerListenerInfo.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="l" type="listener"><Description><![CDATA[The actual listener active for this timer.]]></Description><Summary><![CDATA[The actual listener active for this timer.]]></Summary><TypeParameters/></Member><Member name="timers" type="dictionary"><Parameters><Parameter type="any"/><Parameter type="dictionary"><Parameters><Parameter type="string"/><Parameter package="apama.analyticskit.framework" type="TimerInfo"/></Parameters></Parameter></Parameters><Description><![CDATA[All the user timers for the same absolute target time as the wait listener. Maps from partition to timer id to TimerInfo.]]></Description><Summary><![CDATA[All the user timers for the same absolute target time as the wait listener. Maps from partition to timer id to TimerInfo.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="__Framework" private="true"><Description><![CDATA[for forcing injection orderings.]]></Description><Summary><![CDATA[for forcing injection orderings.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="evalManager" package="apama.analyticskit.framework" type="__EvalManager"><TypeParameters/></Member></Type><Type category="Event" name="BlockIO"><Description><![CDATA[Describes a block's input/ output]]></Description><Summary><![CDATA[Describes a block's input/ output]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="blockId" type="string"><TypeParameters/></Member><Member name="eventTypeName" type="string"><Description><![CDATA[Event type name]]></Description><Summary><![CDATA[Event type name]]></Summary><TypeParameters/></Member><Member name="fields" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="any"/></Parameters><Description><![CDATA[Fields of the input/ output.

 Representative of the fields excluding the in partition field  - does not have to match the actual fields; this is a representation that identifies a stream of events]]></Description><Summary><![CDATA[Fields of the input/ output.]]></Summary><TypeParameters/></Member><Member name="partitionValue" type="any"><Description><![CDATA[Partition value.

 Representative of the partition value - does not have to (but typically will) match an actual field in the events; this is a representation that identifies a stream of events]]></Description><Summary><![CDATA[Partition value.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="EvalManager_ModelResponse"><Description><![CDATA[Response from EvalManager to Model instance on create

 Sent in response to ModelIO.]]></Description><Summary><![CDATA[Response from EvalManager to Model instance on create]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="modelId" type="string"><TypeParameters/></Member><Member name="error" type="optional"><Parameters><Parameter type="com.apama.exceptions.Exception"/></Parameters><TypeParameters/></Member><Member name="evalOrders" type="sequence"><Parameters><Parameter type="string"/></Parameters><TypeParameters/></Member></Type><Type category="Event" name="ModelProfileData"><Description><![CDATA[The model profile data sent in response to publish request or when a model dies.]]></Description><Summary><![CDATA[The model profile data sent in response to publish request or when a model dies.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="CHANNEL" type="string" typeValue="&quot;analytics_model_profiling_updates&quot;"><Description><![CDATA[The channel to which profiled data should be sent.]]></Description><Summary><![CDATA[The channel to which profiled data should be sent.]]></Summary><TypeParameters/></Member><Member constant="true" name="AVG_BLOCK_EVALS" type="string" typeValue="&quot;avgBlockEvaluations&quot;"><Description><![CDATA[The identifier for the average block evaluations in the profiling dictionary.]]></Description><Summary><![CDATA[The identifier for the average block evaluations in the profiling dictionary.]]></Summary><TypeParameters/></Member><Member constant="true" name="NUM_BLOCK_EVALS" type="string" typeValue="&quot;numBlockEvaluations&quot;"><Description><![CDATA[The identifier for the number of block evaluations in the profiling dictionary.]]></Description><Summary><![CDATA[The identifier for the number of block evaluations in the profiling dictionary.]]></Summary><TypeParameters/></Member><Member constant="true" name="NUM_MODEL_EVALS" type="string" typeValue="&quot;numModelEvaluations&quot;"><Description><![CDATA[The identifier for the number of model evaluations in the profiling dictionary.]]></Description><Summary><![CDATA[The identifier for the number of model evaluations in the profiling dictionary.]]></Summary><TypeParameters/></Member><Member constant="true" name="NUM_OUTPUT_GENERATED" type="string" typeValue="&quot;numOutputGenerated&quot;"><Description><![CDATA[The identifier for the number of model evaluations in the profiling dictionary.]]></Description><Summary><![CDATA[The identifier for the number of model evaluations in the profiling dictionary.]]></Summary><TypeParameters/></Member><Member constant="true" name="MODE" type="string" typeValue="&quot;mode&quot;"><Description><![CDATA[The identifier for the number of model evaluations in the profiling dictionary.]]></Description><Summary><![CDATA[The identifier for the number of model evaluations in the profiling dictionary.]]></Summary><TypeParameters/></Member><Member constant="true" name="MODE_PROPERTIES" type="string" typeValue="&quot;modeProperties&quot;"><Description><![CDATA[The identifier for the number of model evaluations in the profiling dictionary.]]></Description><Summary><![CDATA[The identifier for the number of model evaluations in the profiling dictionary.]]></Summary><TypeParameters/></Member><Member name="modelId" type="string"><Description><![CDATA[The ID of the profiled model.]]></Description><Summary><![CDATA[The ID of the profiled model.]]></Summary><TypeParameters/></Member><Member name="scenarioInstanceId" type="integer"><Description><![CDATA[The scenario instance id of the model.]]></Description><Summary><![CDATA[The scenario instance id of the model.]]></Summary><TypeParameters/></Member><Member name="workerId" type="integer"><Description><![CDATA[Which worker this profile is from.]]></Description><Summary><![CDATA[Which worker this profile is from.]]></Summary><TypeParameters/></Member><Member name="data" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="any"/></Parameters><Description><![CDATA[The profiled data.]]></Description><Summary><![CDATA[The profiled data.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="Constants"><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="BLOCK_INIT_ACTION_NAME" type="string" typeValue="&quot;$init&quot;"><Description><![CDATA[The name of the init action which a block can define to perform some operation during initialization.]]></Description><Summary><![CDATA[The name of the init action which a block can define to perform some operation during initialization.]]></Summary><TypeParameters/></Member><Member constant="true" name="BLOCK_PRESPAWNINIT_ACTION_NAME" type="string" typeValue="&quot;$preSpawnInit&quot;"><Description><![CDATA[The name of the preSpawnInit action which a block can define to perform some operation during initialization (before spawning to workers).]]></Description><Summary><![CDATA[The name of the preSpawnInit action which a block can define to perform some operation during initialization (before spawning to workers).]]></Summary><TypeParameters/></Member><Member constant="true" name="BLOCK_VALIDATE_ACTION_NAME" type="string" typeValue="&quot;$validate&quot;"><Description><![CDATA[The name of the validate action which a block can define to perform any additional validations.]]></Description><Summary><![CDATA[The name of the validate action which a block can define to perform any additional validations.]]></Summary><TypeParameters/></Member><Member constant="true" name="BLOCK_BASE_FIELD_NAME" type="string" typeValue="&quot;$base&quot;"><Description><![CDATA[The name of the mandatory field which each block must define for the base block.]]></Description><Summary><![CDATA[The name of the mandatory field which each block must define for the base block.]]></Summary><TypeParameters/></Member><Member constant="true" name="BLOCK_PARAMS_FIELD_NAME" type="string" typeValue="&quot;$parameters&quot;"><Description><![CDATA[The name of the parameters field which a block could define to allow providing parameters when creating an instance of it.]]></Description><Summary><![CDATA[The name of the parameters field which a block could define to allow providing parameters when creating an instance of it.]]></Summary><TypeParameters/></Member><Member constant="true" name="BLOCK_PARAMS_FIELD_TYPE_SUFFIX" type="string" typeValue="&quot;_$Parameters&quot;"><Description><![CDATA[The suffix to add to the block's type name to get the name of its parameters event.]]></Description><Summary><![CDATA[The suffix to add to the block's type name to get the name of its parameters event.]]></Summary><TypeParameters/></Member><Member constant="true" name="BLOCK_PARAM_DEFAULT_PREFIX" type="string" typeValue="&quot;$DEFAULT_&quot;"><Description><![CDATA[The prefix to add to the parameter name to get the constant name for its default value.]]></Description><Summary><![CDATA[The prefix to add to the parameter name to get the constant name for its default value.]]></Summary><TypeParameters/></Member><Member constant="true" name="BLOCK_OUTPUT_FIELD_PREFIX" type="string" typeValue="&quot;$setOutput_&quot;"><Description><![CDATA[The prefix to add to the output name to get the name of the output field.]]></Description><Summary><![CDATA[The prefix to add to the output name to get the name of the output field.]]></Summary><TypeParameters/></Member><Member constant="true" name="BLOCK_OUTPUT_FIELD_TYPE" type="string" typeValue="&quot;action&lt;apama.analyticskit.Activation,SUPPORTED_VALUE_TYPE&gt;&quot;"><Description><![CDATA[The type of the output field.]]></Description><Summary><![CDATA[The type of the output field.]]></Summary><TypeParameters/></Member><Member constant="true" name="BLOCK_OUTPUT_TYPE_CONSTANT_PREFIX" type="string" typeValue="&quot;$OUTPUT_TYPE_&quot;"><Description><![CDATA[The prefix for string constants describing an inputs type.]]></Description><Summary><![CDATA[The prefix for string constants describing an inputs type.]]></Summary><TypeParameters/></Member><Member constant="true" name="BLOCK_TIMER_TRIGGERED_ACTION_NAME" type="string" typeValue="&quot;$timerTriggered&quot;"><Description><![CDATA[The name of the timerTriggered action]]></Description><Summary><![CDATA[The name of the timerTriggered action]]></Summary><TypeParameters/></Member><Member constant="true" name="BLOCK_TIMER_TRIGGERD_ACTION_SIG" type="string" typeValue="&quot;action&lt;apama.analyticskit.Activation,any&gt;&quot;"><Description><![CDATA[The signature of the timerTriggered]]></Description><Summary><![CDATA[The signature of the timerTriggered]]></Summary><TypeParameters/></Member><Member constant="true" name="BLOCK_PROCESS_ACTION_NAME" type="string" typeValue="&quot;$process&quot;"><Description><![CDATA[The name of the process action which a block can define to process inputs.]]></Description><Summary><![CDATA[The name of the process action which a block can define to process inputs.]]></Summary><TypeParameters/></Member><Member constant="true" name="INPUT_PARAM_ACTIVATION_NAME" type="string" typeValue="&quot;$activation&quot;"><Description><![CDATA[The name of the activation input parameter of $process action.]]></Description><Summary><![CDATA[The name of the activation input parameter of $process action.]]></Summary><TypeParameters/></Member><Member constant="true" name="BLOCK_INPUT_PARAM_PREFIX" type="string" typeValue="&quot;$input_&quot;"><Description><![CDATA[The prefix to input parameter of the block.]]></Description><Summary><![CDATA[The prefix to input parameter of the block.]]></Summary><TypeParameters/></Member><Member constant="true" name="BLOCK_INPUT_TYPE_CONSTANT_PREFIX" type="string" typeValue="&quot;$INPUT_TYPE_&quot;"><Description><![CDATA[The prefix for string constants describing an inputs type.]]></Description><Summary><![CDATA[The prefix for string constants describing an inputs type.]]></Summary><TypeParameters/></Member><Member constant="true" name="PULSE_TYPE" type="string" typeValue="&quot;pulse&quot;"><TypeParameters/></Member><Member constant="true" name="BOOLEAN_TYPE" type="string" typeValue="&quot;boolean&quot;"><TypeParameters/></Member><Member constant="true" name="BLOCK_OUTPUTTYPE_ACTION_PREFIX" type="string" typeValue="&quot;$outputType_&quot;"><Description><![CDATA[The prefix to action name ouputType.]]></Description><Summary><![CDATA[The prefix to action name ouputType.]]></Summary><TypeParameters/></Member><Member constant="true" name="BLOCK_STATE_TYPE_SUFFIX" type="string" typeValue="&quot;_$State&quot;"><Description><![CDATA[Suffix to add to the block name for the block state event.]]></Description><Summary><![CDATA[Suffix to add to the block name for the block state event.]]></Summary><TypeParameters/></Member><Member constant="true" name="BLOCK_STATE_PARAM_NAME" type="string" typeValue="&quot;$blockState&quot;"><Description><![CDATA[Name of the parameter for the block state.]]></Description><Summary><![CDATA[Name of the parameter for the block state.]]></Summary><TypeParameters/></Member><Member constant="true" name="MODEL_SCOPE_PARAM_NAME" type="string" typeValue="&quot;$modelScopeParameters&quot;"><Description><![CDATA[Name of the parameter for the model scope parameters.]]></Description><Summary><![CDATA[Name of the parameter for the model scope parameters.]]></Summary><TypeParameters/></Member><Member constant="true" name="PAYLOAD_PARAM_NAME" type="string" typeValue="&quot;$payload&quot;"><Description><![CDATA[Name of the parameter for the payload.]]></Description><Summary><![CDATA[Name of the parameter for the payload.]]></Summary><TypeParameters/></Member><Member constant="true" name="TIMER_HANDLE_PARAM_NAME" type="string" typeValue="&quot;$timerHandle&quot;"><Description><![CDATA[Name of the parameter for the TimerHandle parameter.]]></Description><Summary><![CDATA[Name of the parameter for the TimerHandle parameter.]]></Summary><TypeParameters/></Member><Member constant="true" name="SIMULATION_START_TIME" type="string" typeValue="&quot;startTime&quot;"><Description><![CDATA[The mode property name for the start time of the simulation.]]></Description><Summary><![CDATA[The mode property name for the start time of the simulation.]]></Summary><TypeParameters/></Member><Member constant="true" name="SIMULATION_END_TIME" type="string" typeValue="&quot;endTime&quot;"><Description><![CDATA[The mode property name for the end time of the simulation.]]></Description><Summary><![CDATA[The mode property name for the end time of the simulation.]]></Summary><TypeParameters/></Member><Member constant="true" name="MAX_INPUT_DELAY_PREFIX" type="string" typeValue="&quot;maxDelaySecs&quot;"><Description><![CDATA[The maximum delay (in seconds) allowed for input events.]]></Description><Summary><![CDATA[The maximum delay (in seconds) allowed for input events.]]></Summary><TypeParameters/></Member><Member constant="true" name="CONFIG_PROPERTY_PARAM_NAME" type="string" typeValue="&quot;$configPropertyValues&quot;"><Description><![CDATA[The parameter name for configurable property parameter.]]></Description><Summary><![CDATA[The parameter name for configurable property parameter.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="ReflectionUtil"><Description><![CDATA[Contains helper actions to get informations about a value at runtime.]]></Description><Summary><![CDATA[Contains helper actions to get informations about a value at runtime.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Action name="getOptionalStringConstant" staticNature="static "><Description><![CDATA[Return the string constant if it exists. Throw if the constant is not a string.]]></Description><Summary><![CDATA[Return the string constant if it exists. Throw if the constant is not a string.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="optional"><Parameters><Parameter type="string"/></Parameters></Returns><Parameters><Parameter name="obj" type="any"/><Parameter name="constantName" type="string"/></Parameters></Action><Action name="getFieldTypeOrEmpty" staticNature="static "><Description><![CDATA[Return the type of the field with the given name.]]></Description><Summary><![CDATA[Return the type of the field with the given name.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="optional"><Parameters><Parameter type="string"/></Parameters><Description><![CDATA[The type name of the field if it exists, otherwise an empty optional value.]]></Description></Returns><Parameters><Parameter name="obj" type="any"><Description><![CDATA[The value on which to look for the field.]]></Description></Parameter><Parameter name="fieldName" type="string"><Description><![CDATA[The name of the field to get.]]></Description></Parameter></Parameters></Action><Action name="getActionOrEmpty" staticNature="static "><Description><![CDATA[Return the action with given name on the specified value. Returns an empty any value if action does not exist.]]></Description><Summary><![CDATA[Return the action with given name on the specified value. Returns an empty any value if action does not exist.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"><Description><![CDATA[The action if it exsits, otherwise an empty any value.]]></Description></Returns><Parameters><Parameter name="obj" type="any"><Description><![CDATA[The value on which to look for the action.]]></Description></Parameter><Parameter name="name" type="string"><Description><![CDATA[The name of the action.]]></Description></Parameter></Parameters></Action><Action name="getConstantOrEmpty" staticNature="static "><Description><![CDATA[Return the value of the constant. Returns an empty any value if constant is not defined.]]></Description><Summary><![CDATA[Return the value of the constant. Returns an empty any value if constant is not defined.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"><Description><![CDATA[The value of the constant if it exists, otherwise an empty any value.]]></Description></Returns><Parameters><Parameter name="obj" type="any"><Description><![CDATA[The value on which to look for the constant.]]></Description></Parameter><Parameter name="name" type="string"><Description><![CDATA[The name of the constant.]]></Description></Parameter></Parameters></Action><Action name="getTypeContainedWithinOptional" staticNature="static "><Description><![CDATA[Return the type name contained within an optional type. The type name provided must be an optional type.]]></Description><Summary><![CDATA[Return the type name contained within an optional type. The type name provided must be an optional type.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="typename" type="string"/></Parameters></Action></Type><Type category="Event" name="TimerInfo" private="true"><Description><![CDATA[Information about a timer created by the block.]]></Description><Summary><![CDATA[Information about a timer created by the block.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="params" package="apama.analyticskit" type="TimerParams"><Description><![CDATA[The timer parameters.]]></Description><Summary><![CDATA[The timer parameters.]]></Summary><TypeParameters/></Member><Member name="handle" package="apama.analyticskit" type="TimerHandle"><Description><![CDATA[Handle for the timer passed to the user.]]></Description><Summary><![CDATA[Handle for the timer passed to the user.]]></Summary><TypeParameters/></Member><Member name="triggerTime" type="float"><Description><![CDATA[The absolute time at which which timer will be triggered. Updated for the recurring timer on each invocation.]]></Description><Summary><![CDATA[The absolute time at which which timer will be triggered. Updated for the recurring timer on each invocation.]]></Summary><TypeParameters/></Member><Member name="blockId" type="string"><Description><![CDATA[The block id of the timer. Used to call correct timerTriggred action.]]></Description><Summary><![CDATA[The block id of the timer. Used to call correct timerTriggred action.]]></Summary><TypeParameters/></Member><Member name="triggerAllPartitions" type="boolean"><Description><![CDATA[Only applicable for broadcast timer. When true, broadcast timer will trigger timer for all partitions of the block. This should happen only to input-like blocks.]]></Description><Summary><![CDATA[Only applicable for broadcast timer. When true, broadcast timer will trigger timer for all partitions of the block. This should happen only to input-like blocks.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="EvaluateTime" private="true"><Description><![CDATA[Sent by EvalManager to asking models to perform evaluation for a target time.]]></Description><Summary><![CDATA[Sent by EvalManager to asking models to perform evaluation for a target time.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="targetTime" type="float"><Description><![CDATA[The target time for the evaluation.]]></Description><Summary><![CDATA[The target time for the evaluation.]]></Summary><TypeParameters/></Member><Member name="modelId" type="string"><Description><![CDATA[The model which should be evaluated.]]></Description><Summary><![CDATA[The model which should be evaluated.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="ObjectUtilsConfig"><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="ignoreMissing" type="boolean"><TypeParameters/></Member><Action name="setIgnoreMissing" staticNature=""><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit.framework" type="ObjectUtilsConfig"/><Parameters><Parameter name="b" type="boolean"/></Parameters></Action></Type><Type category="Event" name="CallContext" private="true"><Description/><Summary/><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="modelState" package="apama.analyticskit.framework" type="ModelRuntimeState"><Description><![CDATA[The current runtime sate of the model.]]></Description><Summary><![CDATA[The current runtime sate of the model.]]></Summary><TypeParameters/></Member><Member name="modelSchema" package="apama.analyticskit.framework" type="ModelSchema"><Description><![CDATA[Read only model schema.]]></Description><Summary><![CDATA[Read only model schema.]]></Summary><TypeParameters/></Member><Member name="activation" package="apama.analyticskit" type="Activation"><Description><![CDATA[The current activation. Used only by the $process action.]]></Description><Summary><![CDATA[The current activation. Used only by the $process action.]]></Summary><TypeParameters/></Member><Member name="partitionState" package="apama.analyticskit.framework" type="PerPartition"><Description><![CDATA[The current partition state. Used for taking latched values of input.]]></Description><Summary><![CDATA[The current partition state. Used for taking latched values of input.]]></Summary><TypeParameters/></Member><Member name="blockState" type="any"><Description><![CDATA[Current block state if defined. Used only by the $process action.]]></Description><Summary><![CDATA[Current block state if defined. Used only by the $process action.]]></Summary><TypeParameters/></Member><Member name="payload" type="any"><Description><![CDATA[The payload data used for callback action. Used only by the $timerTriggered action.]]></Description><Summary><![CDATA[The payload data used for callback action. Used only by the $timerTriggered action.]]></Summary><TypeParameters/></Member><Member name="timerHandle" type="any"><Description><![CDATA[The timer handle. Used only by the $timerTriggered action.]]></Description><Summary><![CDATA[The timer handle. Used only by the $timerTriggered action.]]></Summary><TypeParameters/></Member><Member name="configPropertyValues" package="apama.analyticskit" type="ConfigurationProperty"><Description><![CDATA[The values from configurable properties.]]></Description><Summary><![CDATA[The values from configurable properties.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="ModelProfileRequest"><Description><![CDATA[Request to publish model profile data.]]></Description><Summary><![CDATA[Request to publish model profile data.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="CHANNEL" type="string" typeValue="&quot;analytics_model_profiling_request&quot;"><Description><![CDATA[The channel to which to send the event.]]></Description><Summary><![CDATA[The channel to which to send the event.]]></Summary><TypeParameters/></Member><Member name="requestId" type="integer"><TypeParameters/></Member></Type><Type category="Event" name="ObjectUtils"><Description><![CDATA[Contains helper actions to convert JSON to an EPL object:]]></Description><Summary><![CDATA[Contains helper actions to convert JSON to an EPL object:]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Action name="populate" staticNature="static "><Description><![CDATA[Populate an object from a generic set of entries.

 Populates the object 'obj' from a generic set of entries (a sequence<any> or a dictionary<any, any>

 Throws if the toSet contains an entry that is not a field in an event of obj.]]></Description><Summary><![CDATA[Populate an object from a generic set of entries.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="obj" type="any"><Description><![CDATA[The reference object to fill in properties of.  Should be a sequence, dictionary or event.]]></Description></Parameter><Parameter name="toSet" type="any"><Description><![CDATA[the generic set of entries to fill in the entries of obj.]]></Description></Parameter><Parameter name="cfg" package="apama.analyticskit.framework" type="ObjectUtilsConfig"/></Parameters></Action><Action name="populateFromJSONConfig" staticNature="static "><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="obj" type="any"/><Parameter name="json" type="string"/><Parameter name="cfg" package="apama.analyticskit.framework" type="ObjectUtilsConfig"/></Parameters></Action><Action name="populateFromJSON" staticNature="static "><Description><![CDATA[Populate an object from a JSON object.

 Populates the object 'obj' from the JSON properties recursively.  If obj is an event, sets the fields from the JSON object.

 Throws if the json contains a property that is not a field in an event of obj.]]></Description><Summary><![CDATA[Populate an object from a JSON object.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"><Description><![CDATA[the object (typically, the same as obj that was passed in)]]></Description></Returns><Parameters><Parameter name="obj" type="any"><Description><![CDATA[The reference object to fill in properties of.  Should be a sequence, dictionary or event.]]></Description></Parameter><Parameter name="json" type="string"><Description><![CDATA[the JSON object.]]></Description></Parameter></Parameters></Action></Type><Type category="Event" name="PerPartition"><Description><![CDATA[State all of the blocks, and current values of the wire are stored in here.]]></Description><Summary><![CDATA[State all of the blocks, and current values of the wire are stored in here.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="stateOfBlocks" type="sequence"><Parameters><Parameter type="any"/></Parameters><Description><![CDATA[State of the blocks, accessed by index of the block.]]></Description><Summary><![CDATA[State of the blocks, accessed by index of the block.]]></Summary><TypeParameters/></Member><Member name="updatedBlocks" type="sequence"><Parameters><Parameter type="boolean"/></Parameters><Description><![CDATA[A sequence to maintain if a block's input is updated. It is used to skip execution of blocks without any new input since their last execution. The blocks with new input will have true value here. The index of the block in the sequence is the index of their evaluation order.]]></Description><Summary><![CDATA[A sequence to maintain if a block's input is updated. It is used to skip execution of blocks without any new input since their last execution. The blocks with new input will have true value here. The index of the block in the sequence is the index of their evaluation order.]]></Summary><TypeParameters/></Member><Member name="updatedCount" type="integer"><Description><![CDATA[Count of how many blocks are updated. Invariant: should equal number of true elements in updatedBlocks.]]></Description><Summary><![CDATA[Count of how many blocks are updated. Invariant: should equal number of true elements in updatedBlocks.]]></Summary><TypeParameters/></Member><Member name="latchedActivation" package="apama.analyticskit" type="Activation"><Description><![CDATA[The previous activation values. Used for latching previous values on outputs.]]></Description><Summary><![CDATA[The previous activation values. Used for latching previous values on outputs.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="JSONNode" private="true"><Description/><Summary/><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="key" type="string"><TypeParameters/></Member><Member name="id" type="string"><TypeParameters/></Member><Member name="name" type="string"><TypeParameters/></Member><Member name="type" type="string"><TypeParameters/></Member><Member name="categoryName" type="string"><TypeParameters/></Member><Member name="parameters" type="sequence"><Parameters><Parameter package="apama.analyticskit.framework" type="JSONParam"/></Parameters><TypeParameters/></Member><Action name="fromBlockConfiguration" staticNature="static "><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit.framework" type="JSONNode"/><Parameters><Parameter name="bc" package="apama.analyticskit" type="BlockConfiguration"/><Parameter name="key" type="string"/></Parameters></Action><Action name="toBlockConfiguration" staticNature=""><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit" type="BlockConfiguration"/></Action></Type><Type category="Event" name="ModelIO"><Description><![CDATA[Input/ Output connections of a model.]]></Description><Summary><![CDATA[Input/ Output connections of a model.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="modelId" type="string"><TypeParameters/></Member><Member name="modelName" type="string"><TypeParameters/></Member><Member name="scenarioInstanceId" type="integer"><TypeParameters/></Member><Member name="inputs" type="sequence"><Parameters><Parameter package="apama.analyticskit.framework" type="BlockIO"/></Parameters><TypeParameters/></Member><Member name="outputs" type="sequence"><Parameters><Parameter package="apama.analyticskit.framework" type="BlockIO"/></Parameters><TypeParameters/></Member></Type><Type category="Event" name="TerminateWorker"><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="modelId" type="string"><TypeParameters/></Member></Type><Type category="Event" name="Workers"><Description><![CDATA[Sent by the framework at onload.]]></Description><Summary><![CDATA[Sent by the framework at onload.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="workers" type="sequence"><Parameters><Parameter type="context"/></Parameters><TypeParameters/></Member></Type><Type category="Event" name="ActionParamInfo" private="true"><Description/><Summary/><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="name" type="string"><Description><![CDATA[Name of the paramter.]]></Description><Summary><![CDATA[Name of the paramter.]]></Summary><TypeParameters/></Member><Member name="paramType" type="string"><Description><![CDATA[The parameter type in the action.]]></Description><Summary><![CDATA[The parameter type in the action.]]></Summary><TypeParameters/></Member><Member name="kind" type="integer"><Description><![CDATA[What kind of parameter it is.]]></Description><Summary><![CDATA[What kind of parameter it is.]]></Summary><TypeParameters/></Member><Member name="valueType" type="string"><Description><![CDATA[Only applicable for inputs. The computed value type]]></Description><Summary><![CDATA[Only applicable for inputs. The computed value type]]></Summary><TypeParameters/></Member><Member name="expectedType" type="string"><Description><![CDATA[Only applicable for inputs. The type expected by the block.]]></Description><Summary><![CDATA[Only applicable for inputs. The type expected by the block.]]></Summary><TypeParameters/></Member><Member name="outputId" type="integer"><Description><![CDATA[Only applicable for inputs. The outputId from which to get value for this.]]></Description><Summary><![CDATA[Only applicable for inputs. The outputId from which to get value for this.]]></Summary><TypeParameters/></Member><Member name="converter" type="action"><Parameters><Parameter type="any"/><Parameter type="optional"><Parameters><Parameter package="apama.analyticskit" type="Value"/></Parameters></Parameter><Parameter type="any"/></Parameters><Returns type="any"/><Description><![CDATA[Only applicable for inputs. If present, used to convert output values into input values. The parameters are current basic value (boolean/float/string), Value (if not empty) and previous basic value.]]></Description><Summary><![CDATA[Only applicable for inputs. If present, used to convert output values into input values. The parameters are current basic value (boolean/float/string), Value (if not empty) and previous basic value.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="Flusher"><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="n" type="integer"><TypeParameters/></Member></Type><Type category="Event" name="JSONLink" private="true"><Description/><Summary/><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="#from" type="string"><TypeParameters/></Member><Member name="#to" type="string"><TypeParameters/></Member><Member name="inputId" type="string"><TypeParameters/></Member><Member name="outputId" type="string"><TypeParameters/></Member><Action name="toWire" staticNature=""><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit" type="Wire"/></Action><Action name="fromWire" staticNature="static "><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit.framework" type="JSONLink"/><Parameters><Parameter name="w" package="apama.analyticskit" type="Wire"/></Parameters></Action></Type><Type category="Event" name="StreamIO_NonPart" private="true"><Description><![CDATA[StreamIOMap internal key.

 The non-partitioned part of StreamIO, used as a key in StreamIOMap.mapping.]]></Description><Summary><![CDATA[StreamIOMap internal key.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="eventTypeName" type="string"><Description><![CDATA[Event type name]]></Description><Summary><![CDATA[Event type name]]></Summary><TypeParameters/></Member><Member name="nonPartFields" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="any"/></Parameters><Description><![CDATA[Representative of the fields - does not have to match the actual fields; this is a representation that identifies a stream of events]]></Description><Summary><![CDATA[Representative of the fields - does not have to match the actual fields; this is a representation that identifies a stream of events]]></Summary><TypeParameters/></Member><Action name="fromStreamIO" staticNature="static "><Description><![CDATA[Construct from StreamIO]]></Description><Summary><![CDATA[Construct from StreamIO]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit.framework" type="StreamIO_NonPart"/><Parameters><Parameter name="s" package="apama.analyticskit.framework" type="StreamIO"/></Parameters></Action></Type><Type category="Event" name="ScenarioServiceUtil"><Description><![CDATA[Scenario service controller object.

 This acts as a factory for ScenarioService requests and handles Edit and Delete requests as well. The monitor should call init, passing in action pointers for onSpawn and onEdit, and new instances of the monitor will be created as controlled by ScenarioService. This object keeps track of the scenario parameters, which can be obtained with the get methods.]]></Description><Summary><![CDATA[Scenario service controller object.]]></Summary><TypeParameters/><Routes><Reference package="apama.analyticskit.framework" type="WorkerTerminated"/></Routes><Emits/><Enqueues/><Sends><Reference package="apama.analyticskit.framework" type="Flusher"/><Reference package="apama.analyticskit.framework" type="TerminateWorker"/><Reference package="apama.analyticskit.framework" type="WorkerTerminated"/></Sends><Listens><Reference package="apama.analyticskit.framework" type="Flusher"/><Reference package="apama.analyticskit.framework" type="TerminateWorker"/><Reference package="apama.analyticskit.framework" type="WorkerTerminated"/></Listens><Spawns/><Member name="outputs" type="sequence"><Parameters><Parameter type="string"/></Parameters><Description><![CDATA[The scenario output values]]></Description><Summary><![CDATA[The scenario output values]]></Summary><TypeParameters/></Member><Member name="inputs" type="sequence"><Parameters><Parameter type="string"/></Parameters><Description><![CDATA[A copy of the scenario input values. Don't modify]]></Description><Summary><![CDATA[A copy of the scenario input values. Don't modify]]></Summary><TypeParameters/></Member><Member name="scenSvc" private="true" type="com.apama.scenario.ScenarioServiceUpdaterSingleInstance"><Description><![CDATA[Scenario service updated.]]></Description><Summary><![CDATA[Scenario service updated.]]></Summary><TypeParameters/></Member><Member name="scenario" type="com.apama.scenario.Scenario"><Description><![CDATA[Scenario definition event]]></Description><Summary><![CDATA[Scenario definition event]]></Summary><TypeParameters/></Member><Member name="scenarioInstanceId" type="integer"><Description><![CDATA[Scenario instance ID]]></Description><Summary><![CDATA[Scenario instance ID]]></Summary><TypeParameters/></Member><Member name="runningState" type="string"><Description><![CDATA[Scenario's running state]]></Description><Summary><![CDATA[Scenario's running state]]></Summary><TypeParameters/></Member><Member name="terminating" type="boolean"><Description><![CDATA[Is the monitor supposed to terminate (as a result of delete).]]></Description><Summary><![CDATA[Is the monitor supposed to terminate (as a result of delete).]]></Summary><TypeParameters/></Member><Member name="factoryMonitor" type="boolean"><Description><![CDATA[Is this the factory monitor instance.]]></Description><Summary><![CDATA[Is this the factory monitor instance.]]></Summary><TypeParameters/></Member><Member name="spawner" type="action"><Parameters><Parameter type="sequence"><Parameters><Parameter type="string"/></Parameters></Parameter><Parameter type="any"/></Parameters><Returns package="apama.analyticskit" type="Promise"/><Description><![CDATA[Callback provided by the monitor for creating a new instance.]]></Description><Summary><![CDATA[Callback provided by the monitor for creating a new instance.]]></Summary><TypeParameters/></Member><Member name="onEdit" type="action"><Parameters><Parameter type="sequence"><Parameters><Parameter type="string"/></Parameters></Parameter></Parameters><Description><![CDATA[Callback provided by the monitor for editing an instance.]]></Description><Summary><![CDATA[Callback provided by the monitor for editing an instance.]]></Summary><TypeParameters/></Member><Member name="inputNamesIndex" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="integer"/></Parameters><Description><![CDATA[Mapping from input name to index in inputs.]]></Description><Summary><![CDATA[Mapping from input name to index in inputs.]]></Summary><TypeParameters/></Member><Member name="forceRouteUpdates" type="boolean"><Description><![CDATA[Should we always force routeUpdates?]]></Description><Summary><![CDATA[Should we always force routeUpdates?]]></Summary><TypeParameters/></Member><Member name="workerId" type="integer"><Description><![CDATA[Worker id; set for worker instances]]></Description><Summary><![CDATA[Worker id; set for worker instances]]></Summary><TypeParameters/></Member><Member name="modelId" type="string"><Description><![CDATA[Model Id]]></Description><Summary><![CDATA[Model Id]]></Summary><TypeParameters/></Member><Member name="isProxy" type="boolean"><Description><![CDATA[True iff this monitor instance is a scenario service proxy in the main context.]]></Description><Summary><![CDATA[True iff this monitor instance is a scenario service proxy in the main context.]]></Summary><TypeParameters/></Member><Member name="sentWorkerTerminated" type="boolean"><Description><![CDATA[True iff have sent a WorkerTerminated for this worker instance.]]></Description><Summary><![CDATA[True iff have sent a WorkerTerminated for this worker instance.]]></Summary><TypeParameters/></Member><Member constant="true" name="RUNTIME_ERROR" type="string" typeValue="&quot;runtimeError&quot;"><TypeParameters/></Member><Member constant="true" name="RUNTIME_ERROR_LOCALIZED" type="string" typeValue="&quot;runtimeErrorLocalized&quot;"><TypeParameters/></Member><Member constant="true" name="STRING" type="string" typeValue="&quot;string&quot;"><TypeParameters/></Member><Member constant="true" name="PROXY_CHANNEL" type="string" typeValue="&quot;analyticsKit.proxy&quot;"><TypeParameters/></Member><Member name="modelProperties" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="any"/></Parameters><Description><![CDATA[Model properties.]]></Description><Summary><![CDATA[Model properties.]]></Summary><TypeParameters/></Member><Member name="notifyFailure" type="action"><Parameters><Parameter type="com.apama.exceptions.Exception"/></Parameters><Description><![CDATA[Optional callback action to notify of a scenario instance failure.]]></Description><Summary><![CDATA[Optional callback action to notify of a scenario instance failure.]]></Summary><TypeParameters/></Member><Member name="allWorkersChannel" type="optional"><Parameters><Parameter type="string"/></Parameters><Description><![CDATA[Channel to send to to all sub-workers, if appropriate:]]></Description><Summary><![CDATA[Channel to send to to all sub-workers, if appropriate:]]></Summary><TypeParameters/></Member><Member name="create" type="com.apama.scenario.Create"><Description><![CDATA[Event that spawned this sub-monitor]]></Description><Summary><![CDATA[Event that spawned this sub-monitor]]></Summary><TypeParameters/></Member><Member name="workersRunning" type="dictionary"><Parameters><Parameter type="integer"/><Parameter type="boolean"/></Parameters><TypeParameters/></Member><Member name="pendingDeletes" type="sequence"><Parameters><Parameter type="com.apama.scenario.Delete"/></Parameters><TypeParameters/></Member><Action name="handleControlEvents" staticNature=""><Description><![CDATA[Listen for scenario service control events.]]></Description><Summary><![CDATA[Listen for scenario service control events.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="proxy" type="boolean"/></Parameters></Action><Action name="init" staticNature=""><Description><![CDATA[Register a new Scenario definition.]]></Description><Summary><![CDATA[Register a new Scenario definition.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends><Reference package="apama.analyticskit.framework" type="Flusher"/></Sends><Listens><Reference package="apama.analyticskit.framework" type="Flusher"/></Listens><Spawns/><Returns package="apama.analyticskit" type="Promise"/><Parameters><Parameter name="scenarioName" type="string"><Description><![CDATA[the name as exposed to the Scenario service.]]></Description></Parameter><Parameter name="configNames" type="sequence"><Parameters><Parameter type="string"/></Parameters><Description><![CDATA[the names of the input parameters.]]></Description></Parameter><Parameter name="configTypes" type="sequence"><Parameters><Parameter type="string"/></Parameters><Description><![CDATA[the types of the input parameters.  One of string, integer, float, boolean, decimal.]]></Description></Parameter><Parameter name="spawner" type="action"><Parameters><Parameter type="sequence"><Parameters><Parameter type="string"/></Parameters></Parameter><Parameter type="any"/></Parameters><Returns package="apama.analyticskit" type="Promise"/><Description><![CDATA[the action to call on a new instance created.]]></Description></Parameter><Parameter name="onEdit" type="action"><Parameters><Parameter type="sequence"><Parameters><Parameter type="string"/></Parameters></Parameter></Parameters><Description><![CDATA[the action to call on the parameters being changed. (Not called on create)]]></Description></Parameter></Parameters></Action><Action name="workerStarted" staticNature=""><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="apama.analyticskit.framework" type="TerminateWorker"/></Listens><Spawns/></Action><Action name="getDecimal" staticNature=""><Description><![CDATA[Get a parameter as a decimal.]]></Description><Summary><![CDATA[Get a parameter as a decimal.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="decimal"/><Parameters><Parameter name="name" type="string"/></Parameters></Action><Action name="_getOutputs" staticNature=""><Description><![CDATA[Getter for the outputs.]]></Description><Summary><![CDATA[Getter for the outputs.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="sequence"><Parameters><Parameter type="string"/></Parameters></Returns></Action><Action name="_spawnWrapper" private="true" staticNature=""><Description/><Summary/><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="create" type="com.apama.scenario.Create"/><Parameter name="payload" type="any"/></Parameters></Action><Action name="getSeqString" staticNature=""><Description><![CDATA[Get a parameter as a sequence of strings. The string parameter is assumed to be a comma- separated list.  Each string element is trimmed of whitespace.]]></Description><Summary><![CDATA[Get a parameter as a sequence of strings. The string parameter is assumed to be a comma- separated list.  Each string element is trimmed of whitespace.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="sequence"><Parameters><Parameter type="string"/></Parameters></Returns><Parameters><Parameter name="name" type="string"/></Parameters></Action><Action name="getInteger" staticNature=""><Description><![CDATA[Get a parameter as an integer.]]></Description><Summary><![CDATA[Get a parameter as an integer.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="integer"/><Parameters><Parameter name="name" type="string"/></Parameters></Action><Action name="getString" staticNature=""><Description><![CDATA[Get a parameter as a string.]]></Description><Summary><![CDATA[Get a parameter as a string.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="name" type="string"/></Parameters></Action><Action name="getFloat" staticNature=""><Description><![CDATA[Get a parameter as a float.]]></Description><Summary><![CDATA[Get a parameter as a float.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="float"/><Parameters><Parameter name="name" type="string"/></Parameters></Action><Action name="handleExceptionImpl" private="true" staticNature=""><Description><![CDATA[Report an exception with a prefix describing the exception. Puts the scenario into a failed state. If the exception occured while creating model then emit the created event before intance died and state change events.]]></Description><Summary><![CDATA[Report an exception with a prefix describing the exception. Puts the scenario into a failed state. If the exception occured while creating model then emit the created event before intance died and state change events.]]></Summary><TypeParameters/><Routes><Reference package="apama.analyticskit.framework" type="WorkerTerminated"/></Routes><Emits/><Enqueues/><Sends><Reference package="apama.analyticskit.framework" type="WorkerTerminated"/></Sends><Listens/><Spawns/><Parameters><Parameter name="e" type="com.apama.exceptions.Exception"><Description><![CDATA[The exception occured.]]></Description></Parameter><Parameter name="prefixMsgId" type="string"/><Parameter name="creationFailure" type="boolean"><Description><![CDATA[Whether the failure occured during creation or execution time.]]></Description></Parameter></Parameters></Action><Action name="ondie" staticNature=""><Description><![CDATA[Notify of monitor instance termination.  Monitor should call this in its ondie action.]]></Description><Summary><![CDATA[Notify of monitor instance termination.  Monitor should call this in its ondie action.]]></Summary><TypeParameters/><Routes><Reference package="apama.analyticskit.framework" type="WorkerTerminated"/></Routes><Emits/><Enqueues/><Sends><Reference package="apama.analyticskit.framework" type="WorkerTerminated"/></Sends><Listens/><Spawns/></Action><Action name="createFailed" staticNature=""><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="e" type="com.apama.exceptions.Exception"/></Parameters></Action><Action name="startedRunning" staticNature=""><TypeParameters/><Routes/><Emits/><Enqueues/><Sends><Reference package="apama.analyticskit.framework" type="TerminateWorker"/></Sends><Listens><Reference package="apama.analyticskit.framework" type="WorkerTerminated"/></Listens><Spawns/><Returns type="any"/><Parameters><Parameter name="aworkersRunning" type="any"/></Parameters></Action><Action name="handleException" staticNature=""><Description><![CDATA[Report an exception.

 Puts the scenario into a failed state.]]></Description><Summary><![CDATA[Report an exception.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="e" type="com.apama.exceptions.Exception"/></Parameters></Action><Action name="getBoolean" staticNature=""><Description><![CDATA[Get a parameter as a boolean.]]></Description><Summary><![CDATA[Get a parameter as a boolean.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"/><Parameters><Parameter name="name" type="string"/></Parameters></Action></Type><Type category="Event" name="GlobalEvalOrder"><Description><![CDATA[Evaluation orders of all models.]]></Description><Summary><![CDATA[Evaluation orders of all models.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="_makePotentiallyCyclic" private="true" type="sequence"><Parameters><Parameter package="apama.analyticskit.framework" type="GlobalEvalOrder"/></Parameters><Description><![CDATA[Fudge to make this type potentially cyclic, thus obeying alising during copies.]]></Description><Summary><![CDATA[Fudge to make this type potentially cyclic, thus obeying alising during copies.]]></Summary><TypeParameters/></Member><Member name="evalOrders" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="sequence"><Parameters><Parameter type="string"/></Parameters></Parameter></Parameters><Description><![CDATA[Map from model ID to safe model eval order. Note the sequences are aliased for all the models in the same chain.]]></Description><Summary><![CDATA[Map from model ID to safe model eval order. Note the sequences are aliased for all the models in the same chain.]]></Summary><TypeParameters/></Member><Member name="senders" package="apama.analyticskit.framework" type="StreamIOMap"><Description><![CDATA[Map from StreamIO to the model ID that is sending that stream (we can only have one per stream, but a stream may be a wildcard or non-wildcard partition value)]]></Description><Summary><![CDATA[Map from StreamIO to the model ID that is sending that stream (we can only have one per stream, but a stream may be a wildcard or non-wildcard partition value)]]></Summary><TypeParameters/></Member></Type><Type category="Monitor" name="LoadLocalizedMessages_Monitor" private="true"><Description><![CDATA[Loads the localized messages from the correlator's serve connectivity chain. Populates an in-memory memory store of the messages.]]></Description><Summary><![CDATA[Loads the localized messages from the correlator's serve connectivity chain. Populates an in-memory memory store of the messages.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/></Type><Type category="Monitor" name="ModelManager"><Description><![CDATA[Manage model lifecycle.]]></Description><Summary><![CDATA[Manage model lifecycle.]]></Summary><TypeParameters/><Routes><Reference package="apama.analyticskit.framework" type="ModelIO"/><Reference package="apama.analyticskit.framework" type="Workers"/></Routes><Emits/><Enqueues/><Sends><Reference package="apama.analyticskit.framework" type="ModelProfileData"/><Reference package="apama.analyticskit.framework" type="ModelProfileRequestCompleted"/></Sends><Listens><Reference package="apama.analyticskit" type="CreateModel"/><Reference package="apama.analyticskit.framework" type="EvalManager_ModelResponse"/><Reference package="apama.analyticskit.framework" type="GlobalEvalOrder"/><Reference package="apama.analyticskit.framework" type="ModelProfileRequest"/><Reference package="apama.analyticskit.framework" type="RequestWorkers"/></Listens></Type><Type category="Monitor" name="EvalManager"><Description><![CDATA[Track model to model connections, control evaluation order across models in a chain]]></Description><Summary><![CDATA[Track model to model connections, control evaluation order across models in a chain]]></Summary><TypeParameters/><Routes><Reference package="apama.analyticskit.framework" type="EvalManager_ModelResponse"/><Reference package="apama.analyticskit.framework" type="GlobalEvalOrder"/></Routes><Emits/><Enqueues/><Sends/><Listens><Reference package="apama.analyticskit.framework" type="ModelIO"/><Reference package="apama.analyticskit.framework" type="WorkerTerminated"/><Reference package="apama.analyticskit.framework" type="Workers"/></Listens></Type></Package><Package depth="../../../../../" display="apama.analyticskit.framework.internal.parser" name="apama.analyticskit.framework.internal.parser"><Type category="Event" name="Call"><Description><![CDATA[Evaluation of a call.

 e.g. for 3.14.pow(2.0), evalOn yields 3.14; methodName is pow args is [(yields 2.0)]]]></Description><Summary><![CDATA[Evaluation of a call.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="evalOn" type="action"><Parameters><Parameter package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters><Returns type="any"/><Description><![CDATA[Evaluates the expression we are calling on]]></Description><Summary><![CDATA[Evaluates the expression we are calling on]]></Summary><TypeParameters/></Member><Member name="methodName" type="string"><Description><![CDATA[Name of the method we are calling.]]></Description><Summary><![CDATA[Name of the method we are calling.]]></Summary><TypeParameters/></Member><Member name="args" type="sequence"><Parameters><Parameter type="action"><Parameters><Parameter package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters><Returns type="any"/></Parameter></Parameters><Description><![CDATA[Compiled arguments]]></Description><Summary><![CDATA[Compiled arguments]]></Summary><TypeParameters/></Member><Action name="call" staticNature=""><Description><![CDATA[Evaluate the call.

 Used by Compiler to evaluate calling the method named in methodName on the result of evalOn, using the evaluation of the arguments in args.]]></Description><Summary><![CDATA[Evaluate the call.]]></Summary><TypeParameters/><See package="apama.analyticskit.framework.internal.parser" type="Compiler"><Description/></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="ctx" package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters></Action></Type><Type category="Event" name="Compiler"><Description><![CDATA[Compiler.

 Builds a (closure based) action variable from a an AST. Can also predict the type returned by an AST.]]></Description><Summary><![CDATA[Compiler.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="symbols" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="string"/></Parameters><Description><![CDATA[Set of available symbols and their type. Unconnected input has empty type.]]></Description><Summary><![CDATA[Set of available symbols and their type. Unconnected input has empty type.]]></Summary><TypeParameters/></Member><Member name="usedValues" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="string"/></Parameters><Description><![CDATA[Set of used variable names.

 Filled in by calling compile.]]></Description><Summary><![CDATA[Set of used variable names.]]></Summary><TypeParameters/></Member><Action name="supportedBinOperators" staticNature="static "><Description><![CDATA[Returns supported binary operators for specified type.]]></Description><Summary><![CDATA[Returns supported binary operators for specified type.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="sequence"><Parameters><Parameter type="string"/></Parameters></Returns><Parameters><Parameter name="type" type="string"/></Parameters></Action><Action name="compile" staticNature=""><Description><![CDATA[Compile an AST to an action.

 Returns an action varialbe (a closure) which can evaluate the AST. Fills in usedValues as well.]]></Description><Summary><![CDATA[Compile an AST to an action.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="ast" package="apama.analyticskit.framework.internal.parser" type="AST"/></Parameters></Action><Action name="updateIfTypeName" staticNature="static "><Description><![CDATA[Update the node type if it is the name of one of the supported types.]]></Description><Summary><![CDATA[Update the node type if it is the name of one of the supported types.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="ast" package="apama.analyticskit.framework.internal.parser" type="AST"/></Parameters></Action><Action name="type" staticNature=""><Description><![CDATA[Determine the type yielded by an AST.

 Returns the type (and performs type checking) of what calling the result of compile will yield.]]></Description><Summary><![CDATA[Determine the type yielded by an AST.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"><Description><![CDATA[the type - probably one of 'float' or 'boolean' throws if there is a type mismatch.]]></Description></Returns><Parameters><Parameter name="ast" package="apama.analyticskit.framework.internal.parser" type="AST"><Description><![CDATA[the AST root node.]]></Description></Parameter></Parameters></Action><Action name="error" staticNature="static "><Description><![CDATA[Throw an exception]]></Description><Summary><![CDATA[Throw an exception]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="com.apama.exceptions.Exception"/><Parameters><Parameter name="msg" type="string"/></Parameters></Action><Action name="supportedTypes" staticNature="static "><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="dictionary"><Parameters><Parameter type="string"/><Parameter type="boolean"/></Parameters></Returns></Action></Type><Type category="Event" name="AST"><Description><![CDATA[An element in an Abstract Syntax Tree (AST).

 Result of parser. Type can include token types.]]></Description><Summary><![CDATA[An element in an Abstract Syntax Tree (AST).]]></Summary><TypeParameters/><See package="apama.analyticskit.framework.internal.parser" type="Token"><Description/></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="CALL" type="integer" typeValue="10"><TypeParameters/></Member><Member constant="true" name="UNARY_OP" type="integer" typeValue="11"><TypeParameters/></Member><Member constant="true" name="TYPE_NAME" type="integer" typeValue="12"><TypeParameters/></Member><Member constant="true" name="CONSTANT_LOOKUP" type="integer" typeValue="13"><TypeParameters/></Member><Member name="tokenType" type="integer"><Description><![CDATA[Token type.]]></Description><Summary><![CDATA[Token type.]]></Summary><TypeParameters/><See package="apama.analyticskit.framework.internal.parser" type="Token"><Description><![CDATA[May be one of the constants on this type or Token.]]></Description></See></Member><Member name="op" type="string"><Description><![CDATA[Text of the operator.]]></Description><Summary><![CDATA[Text of the operator.]]></Summary><TypeParameters/></Member><Member name="children" type="sequence"><Parameters><Parameter package="apama.analyticskit.framework.internal.parser" type="AST"/></Parameters><Description><![CDATA[Children.

 List of child nodes.  May be empty.]]></Description><Summary><![CDATA[Children.]]></Summary><TypeParameters/></Member><Action name="fromToken" staticNature="static "><Description><![CDATA[Build AST object from a token.]]></Description><Summary><![CDATA[Build AST object from a token.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit.framework.internal.parser" type="AST"/><Parameters><Parameter name="t" package="apama.analyticskit.framework.internal.parser" type="Token"/></Parameters></Action></Type><Type category="Event" name="TypeName"><Description><![CDATA[Evaluation of a type name. Only used as base for calling static action on it and cannot be used as is.]]></Description><Summary><![CDATA[Evaluation of a type name. Only used as base for calling static action on it and cannot be used as is.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="name" type="string"><TypeParameters/></Member><Action name="val" staticNature=""><Description><![CDATA[Evaluate type name.

 Used by Compiler as a closure which returns the default value for the type name so that static actions can be called on it.]]></Description><Summary><![CDATA[Evaluate type name.]]></Summary><TypeParameters/><See package="apama.analyticskit.framework.internal.parser" type="Compiler"><Description/></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="ctx" package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters></Action></Type><Type category="Event" name="UnaryOp"><Description><![CDATA[Evaluation of an unary operator.]]></Description><Summary><![CDATA[Evaluation of an unary operator.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="child" type="action"><Parameters><Parameter package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters><Returns type="any"/><TypeParameters/></Member><Action name="negation" staticNature=""><Description><![CDATA[Evaluate negation.

 Used by Compiler as a closure which returns negation of evaluating child.]]></Description><Summary><![CDATA[Evaluate negation.]]></Summary><TypeParameters/><See package="apama.analyticskit.framework.internal.parser" type="Compiler"><Description/></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="ctx" package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters></Action><Action name="not_op" staticNature=""><Description><![CDATA[Evaluate not.

 Used by Compiler as a closure which returns not of evaluating child.]]></Description><Summary><![CDATA[Evaluate not.]]></Summary><TypeParameters/><See package="apama.analyticskit.framework.internal.parser" type="Compiler"><Description/></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="ctx" package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters></Action><Action name="plus" staticNature=""><Description><![CDATA[Evaluate unary plus.

 Used by Compiler as a closure which returns plus of evaluating child.]]></Description><Summary><![CDATA[Evaluate unary plus.]]></Summary><TypeParameters/><See package="apama.analyticskit.framework.internal.parser" type="Compiler"><Description/></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="ctx" package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters></Action></Type><Type category="Event" name="Variable"><Description><![CDATA[Evaluation of a variable.]]></Description><Summary><![CDATA[Evaluation of a variable.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="name" type="string"><TypeParameters/></Member><Action name="val" staticNature=""><Description><![CDATA[Evaluate variable.

 Used by Compiler as a closure which returns the variable named by name.]]></Description><Summary><![CDATA[Evaluate variable.]]></Summary><TypeParameters/><See package="apama.analyticskit.framework.internal.parser" type="Compiler"><Description/></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="ctx" package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters></Action></Type><Type category="Event" name="ConstantLookup"><Description><![CDATA[Lookup and return the value of constant on the base expression.]]></Description><Summary><![CDATA[Lookup and return the value of constant on the base expression.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="lookupOn" type="action"><Parameters><Parameter package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters><Returns type="any"/><Description><![CDATA[The base expression on which to lookup the constant. It could be the name of the type.]]></Description><Summary><![CDATA[The base expression on which to lookup the constant. It could be the name of the type.]]></Summary><TypeParameters/></Member><Member name="name" type="string"><Description><![CDATA[The name of the constant.]]></Description><Summary><![CDATA[The name of the constant.]]></Summary><TypeParameters/></Member><Action name="lookup" staticNature=""><Description><![CDATA[Evaluate constant lookup.]]></Description><Summary><![CDATA[Evaluate constant lookup.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="ctx" package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters></Action></Type><Type category="Event" name="EvalContext"><Description><![CDATA[Evaluation context.

 This holds the 'variables' avaible to an evaluation of a 'compiled' expression.]]></Description><Summary><![CDATA[Evaluation context.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="values" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="any"/></Parameters><Description><![CDATA[Variable values.]]></Description><Summary><![CDATA[Variable values.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="Token"><Description><![CDATA[Represents a lexical token.

 A lexical token, which is one of an entire string literal (not used), identifier (e.g. 'input1'), number (possibly excluding leading '-'), operator, or a special type denoting end of 'file' (end of text).  Whitespace is excluded by the parser.]]></Description><Summary><![CDATA[Represents a lexical token.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="type" type="integer"><Description><![CDATA[Token type. One of the constants on this event.]]></Description><Summary><![CDATA[Token type. One of the constants on this event.]]></Summary><TypeParameters/></Member><Member name="txt" type="string"><Description><![CDATA[Textual contents of the token, can be different from actual content to handle case-insensitive support for boolean literal and operators.]]></Description><Summary><![CDATA[Textual contents of the token, can be different from actual content to handle case-insensitive support for boolean literal and operators.]]></Summary><TypeParameters/></Member><Member name="rawText" type="string"><Description><![CDATA[Actual content of the token.]]></Description><Summary><![CDATA[Actual content of the token.]]></Summary><TypeParameters/></Member><Member constant="true" name="IDENTIFIER" type="integer" typeValue="2"><TypeParameters/></Member><Member constant="true" name="NUMBER" type="integer" typeValue="3"><TypeParameters/></Member><Member constant="true" name="OPERATOR" type="integer" typeValue="4"><TypeParameters/></Member><Member constant="true" name="BOOLEAN" type="integer" typeValue="5"><TypeParameters/></Member><Member constant="true" name="STRING" type="integer" typeValue="6"><TypeParameters/></Member><Member constant="true" name="EOF" type="integer" typeValue="-1"><TypeParameters/></Member><Action name="prettyPrint" staticNature=""><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/></Action><Action name="create" staticNature="static "><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit.framework.internal.parser" type="Token"/><Parameters><Parameter name="type" type="integer"/><Parameter name="text" type="string"/></Parameters></Action></Type><Type category="Event" name="String"><Description><![CDATA[Evaluation of a string literal.]]></Description><Summary><![CDATA[Evaluation of a string literal.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="value" type="string"><TypeParameters/></Member><Action name="val" staticNature=""><Description><![CDATA[Evaluate literal.

 Used by Compiler as a closure which returns value.]]></Description><Summary><![CDATA[Evaluate literal.]]></Summary><TypeParameters/><See package="apama.analyticskit.framework.internal.parser" type="Compiler"><Description/></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="ctx" package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters></Action></Type><Type category="Event" name="Parser"><Description><![CDATA[Parser - parses text into a tree of AST nodes.]]></Description><Summary><![CDATA[Parser - parses text into a tree of AST nodes.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="tokens" type="sequence"><Parameters><Parameter package="apama.analyticskit.framework.internal.parser" type="Token"/></Parameters><Description><![CDATA[Input tokens.]]></Description><Summary><![CDATA[Input tokens.]]></Summary><TypeParameters/></Member><Member name="txt" type="string"><TypeParameters/></Member><Member name="precedence" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="integer"/></Parameters><Description><![CDATA[Mapping of precedence of operators.

 Higher value indicates tighter binding and higher precedence.]]></Description><Summary><![CDATA[Mapping of precedence of operators.]]></Summary><TypeParameters/></Member><Member name="current" package="apama.analyticskit.framework.internal.parser" type="Token"><Description><![CDATA[The current token.]]></Description><Summary><![CDATA[The current token.]]></Summary><TypeParameters/></Member><Member name="i" type="integer"><Description><![CDATA[index into tokens.]]></Description><Summary><![CDATA[index into tokens.]]></Summary><TypeParameters/></Member><Action name="parseUnary" staticNature=""><Description><![CDATA[Parse a unary expression.

 A unary expression is a plus, minus or not sign.]]></Description><Summary><![CDATA[Parse a unary expression.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit.framework.internal.parser" type="AST"/></Action><Action name="parsePrimaryTerminal" staticNature=""><Description><![CDATA[Parse a primary terminal.

 A primary terminal is a numeric literal, an identifier or a parenthesised sub-expression. For parentheses, is non-terminal, and calls parseParen (whcih calls parseExpression)]]></Description><Summary><![CDATA[Parse a primary terminal.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit.framework.internal.parser" type="AST"/></Action><Action name="getTokenPrecedence" staticNature=""><Description><![CDATA[Lookup precedence of token.

 Looks up in precedence map.]]></Description><Summary><![CDATA[Lookup precedence of token.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="integer"><Description><![CDATA[-1 if not found, else precedence value.]]></Description></Returns></Action><Action name="init" staticNature=""><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="t" type="string"/></Parameters></Action><Action name="parsePostfix" staticNature=""><Description><![CDATA[Parse a postfix expression.

 The only postfix expressions supported in this language are method calls and constant lookup.]]></Description><Summary><![CDATA[Parse a postfix expression.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit.framework.internal.parser" type="AST"/></Action><Action name="errorLocalized_basic" staticNature=""><Description><![CDATA[Throw an exception.

 Uses the location where and the current location in the token list.]]></Description><Summary><![CDATA[Throw an exception.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="com.apama.exceptions.Exception"/><Parameters><Parameter name="what" type="string"/></Parameters></Action><Action name="parseParen" staticNature=""><Description><![CDATA[Parse a parenthesised sub-expression.

 This will recurse to parseExpression.]]></Description><Summary><![CDATA[Parse a parenthesised sub-expression.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit.framework.internal.parser" type="AST"/></Action><Action name="step" staticNature=""><Description><![CDATA[Step to next token.

 Throw if at end.]]></Description><Summary><![CDATA[Step to next token.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="parseText" staticNature="static "><Description><![CDATA[Convert a textual expression into an AST tree.]]></Description><Summary><![CDATA[Convert a textual expression into an AST tree.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit.framework.internal.parser" type="AST"><Description><![CDATA[root node of tree of ASTs throws on parser error.]]></Description></Returns><Parameters><Parameter name="txt" type="string"><Description><![CDATA[Textual form of expression.]]></Description></Parameter></Parameters></Action><Action name="parseExpression" staticNature=""><Description><![CDATA[Parse an expression.

 Consume an expression from the tokens.  This handles unary expressions combined with binary operators.]]></Description><Summary><![CDATA[Parse an expression.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit.framework.internal.parser" type="AST"/></Action><Action name="parseBinOpRHS" staticNature=""><Description><![CDATA[Parse binary operator.

 Parse a right hand side of a binary expression. Only parses tokens of equal or higher precedence that exprPrecedence. (e.g. 1*2 + 3 is all handled in one call, building AST(*, 1,2) and then AST(+,AST(*,1,2),3) .)

 On finding an operator followed by a higher precedence operator, recurses - so 1 + 2 * 3 will recurse to generate AST(*,2,3) and then build AST(+,1,AST(*,2,3))]]></Description><Summary><![CDATA[Parse binary operator.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns package="apama.analyticskit.framework.internal.parser" type="AST"/><Parameters><Parameter name="exprPrecedence" type="integer"/><Parameter name="lhs" package="apama.analyticskit.framework.internal.parser" type="AST"/></Parameters></Action></Type><Type category="Event" name="Lexer"><Description><![CDATA[Lexer. Splits text into tokens.

 Uses a set of heuristics to identify where tokens begin and end.]]></Description><Summary><![CDATA[Lexer. Splits text into tokens.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member constant="true" name="ID_START" type="string" typeValue="&quot;_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$&quot;"><TypeParameters/></Member><Member constant="true" name="ID_REST" type="string" typeValue="&quot;_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$0123456789&quot;"><TypeParameters/></Member><Member constant="true" name="OPERATORS" type="string" typeValue="&quot;- + * / . ( , ) &lt; &gt; = != &gt;= &lt;=&quot;"><TypeParameters/></Member><Member constant="true" name="WHITESPACE" type="string" typeValue="&quot; \t\n\r&quot;"><TypeParameters/></Member><Member constant="true" name="NUMBER" type="string" typeValue="&quot;-0123456789.&quot;"><TypeParameters/></Member><Member constant="true" name="NUMERIC" type="string" typeValue="&quot;0123456789&quot;"><TypeParameters/></Member><Member name="txt" type="string"><Description><![CDATA[Source text.]]></Description><Summary><![CDATA[Source text.]]></Summary><TypeParameters/></Member><Member name="i" type="integer"><Description><![CDATA[Current offset]]></Description><Summary><![CDATA[Current offset]]></Summary><TypeParameters/></Member><Member name="where" type="string"><Description><![CDATA[Current element we are parsing. Used for erorr reporting.]]></Description><Summary><![CDATA[Current element we are parsing. Used for erorr reporting.]]></Summary><TypeParameters/></Member><Member name="ret" type="sequence"><Parameters><Parameter package="apama.analyticskit.framework.internal.parser" type="Token"/></Parameters><Description><![CDATA[Lexer output.

 Output tokens of the lexer.]]></Description><Summary><![CDATA[Lexer output.]]></Summary><TypeParameters/></Member><Action name="getchar" staticNature=""><Description><![CDATA[Consume a single character]]></Description><Summary><![CDATA[Consume a single character]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/></Action><Action name="nextMatches" staticNature=""><Description><![CDATA[Does the next character match any in supplied range.]]></Description><Summary><![CDATA[Does the next character match any in supplied range.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"/><Parameters><Parameter name="range" type="string"/></Parameters></Action><Action name="errorLocalized_basic" staticNature=""><Description><![CDATA[Report an error.

 Based on desc description parameter and where member]]></Description><Summary><![CDATA[Report an error.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="com.apama.exceptions.Exception"/><Parameters><Parameter name="msgId" type="string"/></Parameters></Action><Action name="nextchar" staticNature=""><Description><![CDATA[Peek at next character]]></Description><Summary><![CDATA[Peek at next character]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"><Description><![CDATA[single character or "" if at end of input text.]]></Description></Returns></Action><Action name="getToken" staticNature=""><Description><![CDATA[Identify and return next token.]]></Description><Summary><![CDATA[Identify and return next token.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="sequence"><Parameters><Parameter package="apama.analyticskit.framework.internal.parser" type="Token"/></Parameters><Description><![CDATA[sequence of 0 or 1 Tokens.]]></Description></Returns></Action><Action name="hasMore" staticNature=""><Description><![CDATA[Check not at end of stream]]></Description><Summary><![CDATA[Check not at end of stream]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"/></Action><Action name="matchInt" staticNature=""><Description><![CDATA[Consume an integer]]></Description><Summary><![CDATA[Consume an integer]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/></Action><Action name="tryMatchExp" staticNature=""><Description><![CDATA[Attempt to match an exponent ('e' followed integer)]]></Description><Summary><![CDATA[Attempt to match an exponent ('e' followed integer)]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/></Action><Action name="errorLocalized" staticNature=""><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="com.apama.exceptions.Exception"/><Parameters><Parameter name="msgId" type="string"/><Parameter name="params" type="sequence"><Parameters><Parameter type="any"/></Parameters></Parameter></Parameters></Action><Action name="checkIfSpecialIdentifier" staticNature=""><Description><![CDATA[Check if identifier is special, for example operator or boolean literal. Set the token type accordingly. Also allow case insensitive literals and operators.]]></Description><Summary><![CDATA[Check if identifier is special, for example operator or boolean literal. Set the token type accordingly. Also allow case insensitive literals and operators.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="t" package="apama.analyticskit.framework.internal.parser" type="Token"/></Parameters></Action><Action name="lex" staticNature="static "><Description><![CDATA[Lexer interface. Entry point for lexer.]]></Description><Summary><![CDATA[Lexer interface. Entry point for lexer.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="sequence"><Parameters><Parameter package="apama.analyticskit.framework.internal.parser" type="Token"/></Parameters><Description><![CDATA[a sequence of Tokens.]]></Description></Returns><Parameters><Parameter name="txt" type="string"><Description><![CDATA[the input text to parse.]]></Description></Parameter></Parameters></Action></Type><Type category="Event" name="Number"><Description><![CDATA[Evaluation of a numeric literal.]]></Description><Summary><![CDATA[Evaluation of a numeric literal.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="value" type="float"><TypeParameters/></Member><Action name="val" staticNature=""><Description><![CDATA[Evaluate literal.

 Used by Compiler as a closure which returns value.]]></Description><Summary><![CDATA[Evaluate literal.]]></Summary><TypeParameters/><See package="apama.analyticskit.framework.internal.parser" type="Compiler"><Description/></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="ctx" package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters></Action></Type><Type category="Event" name="BinOp"><Description><![CDATA[Evaluation of a binary operator.]]></Description><Summary><![CDATA[Evaluation of a binary operator.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="left" type="action"><Parameters><Parameter package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters><Returns type="any"/><Description><![CDATA[Left hand side.]]></Description><Summary><![CDATA[Left hand side.]]></Summary><TypeParameters/></Member><Member name="right" type="action"><Parameters><Parameter package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters><Returns type="any"/><Description><![CDATA[Right hand side.]]></Description><Summary><![CDATA[Right hand side.]]></Summary><TypeParameters/></Member><Action name="add" staticNature=""><Description><![CDATA[Addition]]></Description><Summary><![CDATA[Addition]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="ctx" package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters></Action><Action name="sub" staticNature=""><Description><![CDATA[Subtraction]]></Description><Summary><![CDATA[Subtraction]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="ctx" package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters></Action><Action name="mul" staticNature=""><Description><![CDATA[Multiplication]]></Description><Summary><![CDATA[Multiplication]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="ctx" package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters></Action><Action name="lt" staticNature=""><Description><![CDATA[Less than]]></Description><Summary><![CDATA[Less than]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="ctx" package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters></Action><Action name="eq" staticNature=""><Description><![CDATA[Equality]]></Description><Summary><![CDATA[Equality]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="ctx" package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters></Action><Action name="gt" staticNature=""><Description><![CDATA[Greater than]]></Description><Summary><![CDATA[Greater than]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="ctx" package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters></Action><Action name="div" staticNature=""><Description><![CDATA[Division]]></Description><Summary><![CDATA[Division]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="ctx" package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters></Action><Action name="op_or" staticNature=""><Description><![CDATA[OR operator.]]></Description><Summary><![CDATA[OR operator.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="ctx" package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters></Action><Action name="gte" staticNature=""><Description><![CDATA[Greater than or equal]]></Description><Summary><![CDATA[Greater than or equal]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="ctx" package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters></Action><Action name="op_and" staticNature=""><Description><![CDATA[AND operator.]]></Description><Summary><![CDATA[AND operator.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="ctx" package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters></Action><Action name="neq" staticNature=""><Description><![CDATA[Non-equality]]></Description><Summary><![CDATA[Non-equality]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="ctx" package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters></Action><Action name="lte" staticNature=""><Description><![CDATA[Less than or equal]]></Description><Summary><![CDATA[Less than or equal]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="ctx" package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters></Action><Action name="op_xor" staticNature=""><Description><![CDATA[XOR operator.]]></Description><Summary><![CDATA[XOR operator.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="ctx" package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters></Action></Type><Type category="Event" name="Boolean"><Description><![CDATA[Evaluation of a boolean literal.]]></Description><Summary><![CDATA[Evaluation of a boolean literal.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="value" type="boolean"><TypeParameters/></Member><Action name="val" staticNature=""><Description><![CDATA[Evaluate literal.

 Used by Compiler as a closure which returns value.]]></Description><Summary><![CDATA[Evaluate literal.]]></Summary><TypeParameters/><See package="apama.analyticskit.framework.internal.parser" type="Compiler"><Description/></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="ctx" package="apama.analyticskit.framework.internal.parser" type="EvalContext"/></Parameters></Action></Type></Package><Package depth="../../../../" display="apama.analyticskit.blocks.core" name="apama.analyticskit.blocks.core"><Type category="Event" name="BucketWindowConfig"><Description><![CDATA[Bucket window interface.]]></Description><Summary><![CDATA[Bucket window interface.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="windowDuration" type="float"><Description><![CDATA[Total window duration.]]></Description><Summary><![CDATA[Total window duration.]]></Summary><TypeParameters/></Member><Member name="numBuckets" type="integer"><Description><![CDATA[Total number of buckets, including partially expired.]]></Description><Summary><![CDATA[Total number of buckets, including partially expired.]]></Summary><TypeParameters/></Member><Member name="expireBuckets" type="boolean"><Description><![CDATA[Buckets will expire or not.]]></Description><Summary><![CDATA[Buckets will expire or not.]]></Summary><TypeParameters/></Member><Member name="newBucketValue" type="action"><Parameters><Parameter type="any"/></Parameters><Returns type="any"/><Description><![CDATA[Creates a new bucket value.

 Parameters are: state passed to the add call.]]></Description><Summary><![CDATA[Creates a new bucket value.]]></Summary><TypeParameters/></Member><Member name="updateBucket" type="action"><Parameters><Parameter type="any"/><Parameter type="float"/><Parameter type="float"/><Parameter type="float"/><Parameter type="any"/></Parameters><Returns type="any"/><Description><![CDATA[Updates bucket and returns the new bucket value.

 Parameters are: existing bucket value, timestamp of previous bucket value, current timestamp (within that window), value, state passed in to add method..]]></Description><Summary><![CDATA[Updates bucket and returns the new bucket value.]]></Summary><TypeParameters/></Member><Member name="calculateValue" type="action"><Parameters><Parameter type="float"/><Parameter type="sequence"><Parameters><Parameter type="any"/></Parameters></Parameter><Parameter type="any"/></Parameters><Returns type="any"/><Description><![CDATA[Performs the calculation based on the contents of the window.

 Parameters are: proportion of entry at 0 to use, sequence of all buckets, state passed in to add method..]]></Description><Summary><![CDATA[Performs the calculation based on the contents of the window.]]></Summary><TypeParameters/></Member><Action name="bucketDuration" staticNature=""><Description><![CDATA[Duration of a bucket in a window.]]></Description><Summary><![CDATA[Duration of a bucket in a window.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="float"/></Action></Type><Type category="Event" name="BucketWindow"><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="windowElements" type="sequence"><Parameters><Parameter type="any"/></Parameters><Description><![CDATA[the window elements.  Size=0 means state is uninitialized.  For unbounded aggregations, size is 1 (once initialized)]]></Description><Summary><![CDATA[the window elements.  Size=0 means state is uninitialized.  For unbounded aggregations, size is 1 (once initialized)]]></Summary><TypeParameters/></Member><Member name="initialTime_absolute" type="float"><Description><![CDATA[the timestamp of the first entry ever.]]></Description><Summary><![CDATA[the timestamp of the first entry ever.]]></Summary><TypeParameters/></Member><Member name="firstBucketOffset" type="float"><Description><![CDATA[count of how many buckets we are now from the initalTime_absolute.]]></Description><Summary><![CDATA[count of how many buckets we are now from the initalTime_absolute.]]></Summary><TypeParameters/></Member><Member name="prevTime" type="float"><Description><![CDATA[timestamp of the last time we evaluated.]]></Description><Summary><![CDATA[timestamp of the last time we evaluated.]]></Summary><TypeParameters/></Member><Member name="prevValue" type="optional"><Parameters><Parameter type="float"/></Parameters><Description><![CDATA[Previous value received.]]></Description><Summary><![CDATA[Previous value received.]]></Summary><TypeParameters/></Member><Action name="add" staticNature=""><Description><![CDATA[Updates the buckets using prevValue, prevTime and Current time.]]></Description><Summary><![CDATA[Updates the buckets using prevValue, prevTime and Current time.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="any"/><Parameters><Parameter name="time" type="float"/><Parameter name="value" type="float"/><Parameter name="cfg" package="apama.analyticskit.blocks.core" type="BucketWindowConfig"/><Parameter name="state" type="any"/></Parameters></Action><Action name="updateCurrentBucket" staticNature=""><Description><![CDATA[Updates the current bucket to reflect prevValue having occurred between prevTime and the first of the end of the bucket or the time parameter.]]></Description><Summary><![CDATA[Updates the current bucket to reflect prevValue having occurred between prevTime and the first of the end of the bucket or the time parameter.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="time" type="float"/><Parameter name="cfg" package="apama.analyticskit.blocks.core" type="BucketWindowConfig"/><Parameter name="state" type="any"/></Parameters></Action><Action name="specificBucketDuration" staticNature=""><Description><![CDATA[Returns the duration of the specified bucket.]]></Description><Summary><![CDATA[Returns the duration of the specified bucket.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="float"/><Parameters><Parameter name="i" type="integer"/><Parameter name="cfg" package="apama.analyticskit.blocks.core" type="BucketWindowConfig"/></Parameters></Action><Action name="last" staticNature=""><Description><![CDATA[Return last index of the window.]]></Description><Summary><![CDATA[Return last index of the window.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="integer"/></Action><Action name="currentBucketStartTime" staticNature=""><Description><![CDATA[Returns the start time of the current bucket.]]></Description><Summary><![CDATA[Returns the start time of the current bucket.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="float"/><Parameters><Parameter name="cfg" package="apama.analyticskit.blocks.core" type="BucketWindowConfig"/></Parameters></Action><Action name="bucketStartTime" staticNature=""><Description><![CDATA[Get the start time of the n'th bucket.]]></Description><Summary><![CDATA[Get the start time of the n'th bucket.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="float"><Description><![CDATA[the start time (absolute) of the bucketIndex'th bucket start (or bucketIndex+1's end)]]></Description></Returns><Parameters><Parameter name="bucketIndex" type="integer"><Description><![CDATA[Which bucket to find the time of.]]></Description></Parameter><Parameter name="cfg" package="apama.analyticskit.blocks.core" type="BucketWindowConfig"><Description><![CDATA[The BucketWindowConfig.]]></Description></Parameter></Parameters></Action><Action name="getRelativeInputTime" staticNature=""><Description><![CDATA[Returns the relative time of the input with respect to first input. This action must be called after adding first element to the bucket.]]></Description><Summary><![CDATA[Returns the relative time of the input with respect to first input. This action must be called after adding first element to the bucket.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="float"/><Parameters><Parameter name="currTime" type="float"/><Parameter name="cfg" package="apama.analyticskit.blocks.core" type="BucketWindowConfig"/></Parameters></Action><Action name="currentBucketEndTime" staticNature=""><Description><![CDATA[Returns the end time of the current bucket.]]></Description><Summary><![CDATA[Returns the end time of the current bucket.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="float"/><Parameters><Parameter name="cfg" package="apama.analyticskit.blocks.core" type="BucketWindowConfig"/></Parameters></Action><Action name="reset" staticNature=""><Description><![CDATA[Resets the bucket.]]></Description><Summary><![CDATA[Resets the bucket.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="proportionOfFirstBucket" staticNature=""><Description><![CDATA[Returns the proportion of the first bucket which is not expired yet.]]></Description><Summary><![CDATA[Returns the proportion of the first bucket which is not expired yet.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="float"/><Parameters><Parameter name="cfg" package="apama.analyticskit.blocks.core" type="BucketWindowConfig"/><Parameter name="time" type="float"/></Parameters></Action></Type></Package></Packages>